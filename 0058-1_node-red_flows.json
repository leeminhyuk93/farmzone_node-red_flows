[
  {
    "id": "1705ace4c8685c9f",
    "type": "tab",
    "label": "TEST",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "71aaba71cce9c427",
    "type": "tab",
    "label": "플로우 1",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "adc276c44d0c018a",
    "type": "modbus-client",
    "name": "192.168.1.219",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.1.219",
    "tcpPort": "5001",
    "tcpType": "DEFAULT",
    "serialPort": "COM10",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": false,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "18681da1908034ad",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM8",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "0",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "69f8968ff99cb06f",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM11",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "0",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "c6c531fb981c61a7",
    "type": "MySQLdatabase",
    "name": "",
    "host": "127.0.0.1",
    "port": "3306",
    "db": "test",
    "tz": "",
    "charset": "UTF8"
  },
  {
    "id": "cad5d73219d56d46",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM10",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 0,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "a5ebc226298d01e7",
    "type": "comment",
    "z": "1705ace4c8685c9f",
    "name": "열성형 포장기 TEST",
    "info": "-위치 : A동 내포장실\n-장비 : 열성형 포장기\n\n[하드웨어 구성도]\n열성형포장기 → PLC → 솔내컨버터(smg5400) → ap → 포스기",
    "x": 150,
    "y": 80,
    "wires": []
  },
  {
    "id": "c64dc408078dca3d",
    "type": "inject",
    "z": "1705ace4c8685c9f",
    "d": true,
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 140,
    "wires": [
      [
        "819f820b3c311ce1",
        "c3c7f72b5a9ee86d"
      ]
    ]
  },
  {
    "id": "34867c58bb81c329",
    "type": "modbus-getter",
    "z": "1705ace4c8685c9f",
    "d": true,
    "name": "열성형포장기",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "1100",
    "quantity": "2",
    "server": "adc276c44d0c018a",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 500,
    "y": 140,
    "wires": [
      [
        "4cd8cc4923b40283"
      ],
      []
    ]
  },
  {
    "id": "e76dbcae7eff4114",
    "type": "function",
    "z": "1705ace4c8685c9f",
    "name": "parsing1",
    "func": "let device_name = \"열성형 포장기\";   // 장치명\nlet model_num = msg.payload[0];  // 생산 모델 번호(확실하지 않음)\nlet count = parseInt(msg.payload[1]);  // 포장 횟수\n\n\nmsg.payload = {\n    \"장치명\" : device_name,\n    \"생산모델 번호\" : model_num,\n    \"포장횟수\" : count\n}\n\n\nmsg.topic = \"INSERT INTO fz_shm (model, count, date) VALUES ('\" + model_num + \"', '\" + count + \"', NOW())\";\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 680,
    "y": 100,
    "wires": [
      []
    ]
  },
  {
    "id": "c3c7f72b5a9ee86d",
    "type": "function",
    "z": "1705ace4c8685c9f",
    "name": "SELECT Query(비교용)",
    "func": "msg.topic = \"SELECT model, count, date FROM fz_shm ORDER BY date DESC LIMIT 1\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 200,
    "wires": [
      [
        "bb7a13042af56534"
      ]
    ]
  },
  {
    "id": "c621eef5c60b7c67",
    "type": "function",
    "z": "1705ace4c8685c9f",
    "name": "DB Data",
    "func": "// DB에 저장된 마지막 값(생산 모델 번호, 생산량)\n// 현재 수집된 데이터와 비교하기 위해 필요함\n\nlet db_data = msg.payload;\nglobal.set(\"db_data\", db_data[0]);\n\n\nmsg.payload = {\n    \"모델\": db_data[0][\"model\"],\n    \"생산량\": db_data[0][\"count\"],\n    \"저장시간\" : db_data[0][\"date\"].toLocaleString()\n}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 700,
    "y": 200,
    "wires": [
      [
        "6cab091168071f49"
      ]
    ]
  },
  {
    "id": "4cd8cc4923b40283",
    "type": "function",
    "z": "1705ace4c8685c9f",
    "name": "parsing2",
    "func": "let device_name = \"열성형 포장기\";   // 장치명\nlet model = msg.payload[0];  // 현재 받아온 model 값(생산 모델 번호, 확실하지 않음)\nlet count = parseInt(msg.payload[1]);  // 현재 받아온 count 값(생산량)\n\nlet db_model = global.get(\"db_data\")[\"model\"];  //db에 저장된 마지막 model 값\nlet db_count = global.get(\"db_data\")[\"count\"];  //db에 저장된 마지막 count 값\n\nmsg.payload = {\n    \"장치명\": device_name,\n    \"이전 생산모델 번호\": db_model,\n    \"현재 생산모델 번호\": model,\n    \"이전 생산량\": db_count,\n    \"현재 생산량\": count\n}\n\n\nif (model == db_model) {  //현재 받아온 model 값과 db에 저장된 마지막 model 값이 같을 경우\n    if (count != db_count) {  //현재 받아온 count 값과 db에 저장된 마지막 count 값이 다를 경우\n        msg.topic = \"INSERT INTO fz_shm (model, count, date) VALUES ('\" + model + \"', '\" + count + \"', NOW())\";\n        return msg;\n    }\n} else {  //현재 받아온 model 값과 db에 저장된 마지막 model 값이 다를 경우\n    msg.topic = \"INSERT INTO fz_shm (model, count, date) VALUES ('\" + model + \"', '\" + count + \"', NOW())\";\n    return msg;\n}\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 680,
    "y": 140,
    "wires": [
      [
        "c7d48b08e9387f7b"
      ]
    ]
  },
  {
    "id": "819f820b3c311ce1",
    "type": "delay",
    "z": "1705ace4c8685c9f",
    "name": "",
    "pauseType": "delay",
    "timeout": "500",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 310,
    "y": 140,
    "wires": [
      [
        "34867c58bb81c329"
      ]
    ]
  },
  {
    "id": "c7d48b08e9387f7b",
    "type": "mysql",
    "z": "1705ace4c8685c9f",
    "d": true,
    "mydb": "c6c531fb981c61a7",
    "name": "",
    "x": 830,
    "y": 140,
    "wires": [
      []
    ]
  },
  {
    "id": "bb7a13042af56534",
    "type": "mysql",
    "z": "1705ace4c8685c9f",
    "d": true,
    "mydb": "c6c531fb981c61a7",
    "name": "",
    "x": 550,
    "y": 200,
    "wires": [
      [
        "c621eef5c60b7c67"
      ]
    ]
  },
  {
    "id": "9e45b1ab98d99a20",
    "type": "function",
    "z": "1705ace4c8685c9f",
    "name": "send api",
    "func": "// 생산 모델 번호, 생산량\nif (global.get(\"db_data\")[\"model\"] != \"\"){\n    let db_model = global.get(\"db_data\")[\"model\"];  // 생산 모델 번호\n    let db_count = global.get(\"db_data\")[\"count\"];  // 생산량\n\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"m_gubun\": \"5\",\n        \"m_adr\": db_model,\n        \"speed\": '0',\n        \"temperature\": db_count\n    };\n\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 660,
    "y": 260,
    "wires": [
      [
        "5ed1066106038392"
      ]
    ]
  },
  {
    "id": "5ed1066106038392",
    "type": "http request",
    "z": "1705ace4c8685c9f",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0058/get_thermoforming",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 830,
    "y": 260,
    "wires": [
      [
        "c3a1fed99a168878"
      ]
    ]
  },
  {
    "id": "6cab091168071f49",
    "type": "debug",
    "z": "1705ace4c8685c9f",
    "name": "debug 6",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 860,
    "y": 200,
    "wires": []
  },
  {
    "id": "263290f5dc3e7183",
    "type": "function",
    "z": "1705ace4c8685c9f",
    "name": "SELECT Query(API용)",
    "func": "msg.topic = \"SELECT model, count, date FROM fz_shm WHERE (date BETWEEN date_add(now(), interval -15 second) AND now()) ORDER BY date DESC LIMIT 1\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 320,
    "y": 260,
    "wires": [
      [
        "ce36783ee62ab7e2"
      ]
    ]
  },
  {
    "id": "ce36783ee62ab7e2",
    "type": "mysql",
    "z": "1705ace4c8685c9f",
    "d": true,
    "mydb": "c6c531fb981c61a7",
    "name": "",
    "x": 510,
    "y": 260,
    "wires": [
      [
        "9e45b1ab98d99a20"
      ]
    ]
  },
  {
    "id": "bb97782ba6db40d9",
    "type": "inject",
    "z": "1705ace4c8685c9f",
    "d": true,
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 260,
    "wires": [
      [
        "263290f5dc3e7183"
      ]
    ]
  },
  {
    "id": "c3a1fed99a168878",
    "type": "debug",
    "z": "1705ace4c8685c9f",
    "name": "debug 7",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 1000,
    "y": 260,
    "wires": []
  },
  {
    "id": "a4e408c03b2c2e8f",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "60",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 140,
    "wires": [
      [
        "561e697e95310621"
      ]
    ]
  },
  {
    "id": "561e697e95310621",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "1",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "cad5d73219d56d46",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": true,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 130,
    "y": 200,
    "wires": [
      [
        "4502df9644170c7e",
        "108c69b34b0807ed"
      ],
      []
    ]
  },
  {
    "id": "c4416050754c797f",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "XR10 (1~6)",
    "info": "",
    "x": 110,
    "y": 80,
    "wires": []
  },
  {
    "id": "3b33d78e8ce57481",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "2",
    "showStatusActivities": true,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "cad5d73219d56d46",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": true,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 130,
    "y": 260,
    "wires": [
      [
        "afd44cd4d039c944",
        "bd2a3a61a5f904a4"
      ],
      []
    ]
  },
  {
    "id": "ad6c02ae8accaff0",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 430,
    "y": 260,
    "wires": [
      [
        "c6b798f9372643c9"
      ]
    ]
  },
  {
    "id": "55daa5d40673ad8b",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "1",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 410,
    "y": 200,
    "wires": [
      [
        "3b33d78e8ce57481",
        "1e1b538f43576b10"
      ]
    ]
  },
  {
    "id": "730b815e66188856",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug for TCs",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1340,
    "y": 500,
    "wires": []
  },
  {
    "id": "54c9f93776a09746",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0058/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 1150,
    "y": 500,
    "wires": [
      [
        "730b815e66188856"
      ]
    ]
  },
  {
    "id": "bf96f88cdf4fcf67",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "if (msg.payload == \"error\") {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": \"1\",\n        \"temperature\": \"\"\n    };\n\n    return msg;\n\n} else {\n\n    //현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\n    var curTemp = '';\n    if (msg.payload == 0) {\n        curTemp = '0';\n    } else {\n        curTemp = parseFloat(msg.payload) / 10;\n    }\n\n    //장치 국번\n    var unitid = msg.unitId;\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": '1',\n        \"temperature\": curTemp,\n    };\n\n    return msg;\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 780,
    "y": 200,
    "wires": [
      [
        "fefc33e3610d2c23"
      ]
    ]
  },
  {
    "id": "1e1b538f43576b10",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 590,
    "y": 200,
    "wires": [
      [
        "bf96f88cdf4fcf67"
      ]
    ]
  },
  {
    "id": "1433ad0db0d6b9c8",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "60",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 380,
    "wires": [
      [
        "d96a663953e6696b"
      ]
    ]
  },
  {
    "id": "d96a663953e6696b",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "3",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "3",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "18681da1908034ad",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": true,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 440,
    "wires": [
      [
        "31ed2eacbc66eab1",
        "9d9814a2ee12a5a4"
      ],
      []
    ]
  },
  {
    "id": "a99bc567aa9a74dc",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "if (msg.payload == \"error\") {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": \"3\",\n        \"temperature\": \"\"\n    };\n\n    return msg;\n\n} else {\n\n    //현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\n    var curTemp = '';\n    if (msg.payload == 0) {\n        curTemp = '0';\n    } else {\n        curTemp = parseFloat(msg.payload) / 10;\n    }\n\n    //장치 국번\n    var unitid = msg.unitId;\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": unitid,\n        \"temperature\": curTemp,\n    };\n\n    return msg;\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 760,
    "y": 440,
    "wires": [
      [
        "cc74221dc6983613"
      ]
    ]
  },
  {
    "id": "f18a5ac44cb097c0",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 590,
    "y": 440,
    "wires": [
      [
        "a99bc567aa9a74dc"
      ]
    ]
  },
  {
    "id": "c489634af60d1a9c",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "4",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "4",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "69f8968ff99cb06f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": true,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 660,
    "wires": [
      [
        "37ec7f64f7cae804",
        "a49eb1caaff02b8e"
      ],
      []
    ]
  },
  {
    "id": "c4b42554d17a5174",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "4",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 390,
    "y": 660,
    "wires": [
      [
        "7f02f94e216e1415",
        "69443c3b2de4b70a"
      ]
    ]
  },
  {
    "id": "2dfa57b11a961b1f",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "if (msg.payload == \"error\") {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": \"4\",\n        \"temperature\": \"\"\n    };\n\n    return msg;\n\n} else {\n\n    //현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\n    var curTemp = '';\n    if (msg.payload == 0) {\n        curTemp = '0';\n    } else {\n        curTemp = parseFloat(msg.payload) / 10;\n    }\n \n\n\n    //장치 국번\n    var unitid = msg.unitId;\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": unitid,\n        \"temperature\": curTemp,\n    };\n\n    return msg;\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 800,
    "y": 660,
    "wires": [
      [
        "f6d52c9c4b0259b3"
      ]
    ]
  },
  {
    "id": "7f02f94e216e1415",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 610,
    "y": 680,
    "wires": [
      [
        "2dfa57b11a961b1f"
      ]
    ]
  },
  {
    "id": "6faeee40697e9edb",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "60",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 580,
    "wires": [
      [
        "c489634af60d1a9c"
      ]
    ]
  },
  {
    "id": "69443c3b2de4b70a",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "5",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "5",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "69f8968ff99cb06f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": true,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 760,
    "wires": [
      [
        "55dcc85e39f69ef9",
        "0b44131b66fedb65"
      ],
      []
    ]
  },
  {
    "id": "49173635fc7e7b79",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 390,
    "y": 780,
    "wires": [
      [
        "e0ec72289e62885d",
        "cdb0339ffe3fd9b3"
      ]
    ]
  },
  {
    "id": "e0ec72289e62885d",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "6",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "6",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "69f8968ff99cb06f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": true,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 880,
    "wires": [
      [
        "0584f2ba84b44bf5",
        "e5bef687ff781284"
      ],
      []
    ]
  },
  {
    "id": "66b88661e08d4a61",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "6",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 410,
    "y": 900,
    "wires": [
      [
        "db97c61d48d6e778"
      ]
    ]
  },
  {
    "id": "92a88c6456c3e5c3",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "3",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 410,
    "y": 440,
    "wires": [
      [
        "f18a5ac44cb097c0"
      ]
    ]
  },
  {
    "id": "9b82c354fa5cc912",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "열성형 포장기",
    "info": "-위치 : A동 내포장실\n-장비 : 열성형 포장기\n\n[하��웨어 구성도]\n열성형포장기 → PLC → 솔내컨버터(smg5400) → ap → 포스기",
    "x": 110,
    "y": 1100,
    "wires": []
  },
  {
    "id": "8aac9a743ac2c67d",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "5",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1140,
    "wires": [
      [
        "781c0f479a1907ab",
        "b15347402020e34a"
      ]
    ]
  },
  {
    "id": "42b40b4c64bc9eea",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "열성형포장기",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "1100",
    "quantity": "2",
    "server": "adc276c44d0c018a",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 500,
    "y": 1140,
    "wires": [
      [
        "4246c015ed2ab245"
      ],
      []
    ]
  },
  {
    "id": "a5a2e407f4d9424f",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "parsing",
    "func": "let device_name = \"열성형 포장기\";   // 장치명\nlet model = msg.payload[0];  // 현재 받아온 model 값(생산 모델 번호, 확실하지 않음)\nlet count = parseInt(msg.payload[1]);  // 현재 받아온 count 값(생산량)\n\n\nmsg.payload = {\n    \"장치명\": device_name,\n    \"현재 생산모델 번호\": model,\n    \"현재 생산량\": count\n}\n\nmsg.topic = \"INSERT INTO fz_shm (model, count, date) VALUES ('\" + model + \"', '\" + count + \"', NOW())\";\n\nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 680,
    "y": 1100,
    "wires": [
      []
    ]
  },
  {
    "id": "781c0f479a1907ab",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "",
    "pauseType": "delay",
    "timeout": "500",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 310,
    "y": 1140,
    "wires": [
      [
        "42b40b4c64bc9eea"
      ]
    ]
  },
  {
    "id": "8bc21ab8bfd1e60a",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "c6c531fb981c61a7",
    "name": "",
    "x": 850,
    "y": 1140,
    "wires": [
      []
    ]
  },
  {
    "id": "277e71ff363af1ae",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "// 생산 모델 번호, 생산량\nif (msg.payload != \"\"){\n    let db_model = msg.payload[0].model;  // 생산 모델 번호\n    let db_count = msg.payload[0].count;  // 생산량\n\n    var b_cnt = 0;\n\n    if(b_cnt != db_count){\n        \n        msg.headers = {};\n        msg.headers['content-type'] = \"application/json\";\n        msg.headers['Accept'] = \"application/json\";\n\n        msg.payload = {\n            \"ccode\": \"0058\",\n            \"m_gubun\": \"5\",\n            \"m_adr\": db_model,\n            \"tot_cnt\": db_count\n        };\n\n        return msg;\n\n    }\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 640,
    "y": 1260,
    "wires": [
      [
        "e50fe0b7083e8539"
      ]
    ]
  },
  {
    "id": "71bcef1c96453371",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 3",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 980,
    "y": 1260,
    "wires": []
  },
  {
    "id": "c31b87c2c580253a",
    "type": "tcp in",
    "z": "71aaba71cce9c427",
    "name": "금속검출기 5002",
    "server": "server",
    "host": "",
    "port": "5002",
    "datamode": "stream",
    "datatype": "buffer",
    "newline": "",
    "topic": "",
    "trim": false,
    "base64": false,
    "tls": "",
    "x": 140,
    "y": 1380,
    "wires": [
      [
        "d1f475b8fe74a5f0",
        "2890902de149b147"
      ]
    ]
  },
  {
    "id": "d1f475b8fe74a5f0",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "SELECT Query",
    "func": "var ccode = \"0058\";\nvar scode = \"93\";\nvar type = \"2\";\nvar res = msg.payload;\n\nvar paseData = new Array();\nfor (var i = 0; i < res.length; i++) {\n    paseData[i] = String.fromCharCode(res[i]);\n}\n\nvar detected = false;\n\nif (type == \"1\" && (res.length % 34) == 0) {\n    // 나우시스템즈\n    if (paseData[0] == ' ' && paseData[32] == '\\r' && paseData[33] == '\\n') {\n        if ((paseData[1] + paseData[2]) == \"80\" || (paseData[1] + paseData[2]) == \"81\") {\n            detected = true;\n        }\n    }\n\n} else if (type == \"1\" && ((res.length % 23) == 0 || (res.length % 24) == 0)) {\n    if (paseData[0] == 'R' && paseData[1] == 'E' && paseData[2] == 'J') {\n        detected = true;\n    }\n\n} else if (type == \"2\" && (res.length % 6) == 0) {\n    if (paseData[0] == '\\u0002' && paseData[5] == '\\u0003') {\n        if (paseData[3] == \"1\") {\n            detected = true;\n        }\n    }\n\n} else if (type == \"3\" && (res.length % 11) == 0) {\n    for (var i = 1; i <= (res.length / 11); i++) {\n        if (paseData[(i * 11 - 1)] == \"\\u0001\") {\n            detected = true;\n        }\n    }\n\n}\n\nif (detected) {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": ccode,\n        \"scode\": scode\n    };\n\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 360,
    "y": 1380,
    "wires": [
      [
        "f257d3cdb56243a4"
      ]
    ]
  },
  {
    "id": "db864a79f2507761",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 4",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 800,
    "y": 1380,
    "wires": []
  },
  {
    "id": "f257d3cdb56243a4",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0058/get_detection",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 570,
    "y": 1380,
    "wires": [
      [
        "db864a79f2507761"
      ]
    ]
  },
  {
    "id": "7e01fc31f50ec0cf",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "금속검출기, 모든다해",
    "info": "",
    "x": 160,
    "y": 1340,
    "wires": []
  },
  {
    "id": "e50fe0b7083e8539",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0058/get_thermoforming",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 810,
    "y": 1260,
    "wires": [
      [
        "71bcef1c96453371"
      ]
    ]
  },
  {
    "id": "97a66254496b5402",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "SELECT Query",
    "func": "msg.topic = \"SELECT model, count, date FROM fz_shm WHERE (date BETWEEN date_add(now(), interval -15 second) AND now()) ORDER BY date DESC LIMIT 1\";\n//msg.topic = \"SELECT model, count, date FROM fz_shm ORDER BY date DESC LIMIT 1\";\n\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 320,
    "y": 1260,
    "wires": [
      [
        "0d25176e4eca53f9"
      ]
    ]
  },
  {
    "id": "0d25176e4eca53f9",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "c6c531fb981c61a7",
    "name": "",
    "x": 490,
    "y": 1260,
    "wires": [
      [
        "277e71ff363af1ae"
      ]
    ]
  },
  {
    "id": "4246c015ed2ab245",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "parsing2",
    "func": "let device_name = \"열성형 포장기\";   // 장치명\nlet model = msg.payload[0];  // 현재 받아온 model 값(생산 모델 번호, 확실하지 않음)\nlet count = parseInt(msg.payload[1]);  // 현재 받아온 count 값(생산량)\n\nlet db_model = global.get(\"db_data\")[\"model\"];  //db에 저장된 마지막 model 값\nlet db_count = global.get(\"db_data\")[\"count\"];  //db에 저장된 마지막 count 값\n\nmsg.payload = {\n    \"장치명\": device_name,\n    \"이전 생산모델 번호\": db_model,\n    \"현재 생산모델 번호\": model,\n    \"이전 생산량\": db_count,\n    \"현재 생산량\": count\n}\n\n\nif (model == db_model) {  //현재 받아온 model 값과 db에 저장된 마지막 model 값이 같을 경우\n    if (count != db_count) {  //현재 받아온 count 값과 db에 저장된 마지막 count 값이 다를 경우\n        msg.topic = \"INSERT INTO fz_shm (model, count, date) VALUES ('\" + model + \"', '\" + count + \"', NOW())\";\n        return msg;\n    }\n} else {  //현재 받아온 model 값과 db에 저장된 마지막 model 값이 다를 경우\n    msg.topic = \"INSERT INTO fz_shm (model, count, date) VALUES ('\" + model + \"', '\" + count + \"', NOW())\";\n    return msg;\n}\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 680,
    "y": 1140,
    "wires": [
      [
        "8bc21ab8bfd1e60a"
      ]
    ]
  },
  {
    "id": "b15347402020e34a",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "SELECT Query(비교용)",
    "func": "msg.topic = \"SELECT model, count, date FROM fz_shm ORDER BY date DESC LIMIT 1\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 1200,
    "wires": [
      [
        "6252314d5d2ef63b"
      ]
    ]
  },
  {
    "id": "e529b6d2ca6b2408",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "DB Data",
    "func": "// DB에 저장된 마지막 값(생산 모델 번호, 생산량)\n// 현재 수집된 데이터와 비교하기 위해 필요함\n\nlet db_data = msg.payload;\nglobal.set(\"db_data\", db_data[0]);\n\n\nmsg.payload = {\n    \"모델\": db_data[0][\"model\"],\n    \"생산량\": db_data[0][\"count\"],\n    \"저장시간\" : db_data[0][\"date\"].toLocaleString()\n}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 700,
    "y": 1200,
    "wires": [
      [
        "56d7215ff38366b1"
      ]
    ]
  },
  {
    "id": "6252314d5d2ef63b",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "c6c531fb981c61a7",
    "name": "",
    "x": 550,
    "y": 1200,
    "wires": [
      [
        "e529b6d2ca6b2408"
      ]
    ]
  },
  {
    "id": "56d7215ff38366b1",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 9",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 860,
    "y": 1200,
    "wires": []
  },
  {
    "id": "c09256e1b13776de",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "600",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1260,
    "wires": [
      [
        "97a66254496b5402"
      ]
    ]
  },
  {
    "id": "4502df9644170c7e",
    "type": "switch",
    "z": "71aaba71cce9c427",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "empty"
      },
      {
        "t": "nempty"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 270,
    "y": 200,
    "wires": [
      [
        "697a621c290ae6f3"
      ],
      [
        "55daa5d40673ad8b"
      ]
    ]
  },
  {
    "id": "697a621c290ae6f3",
    "type": "change",
    "z": "71aaba71cce9c427",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 440,
    "y": 120,
    "wires": [
      [
        "bf96f88cdf4fcf67"
      ]
    ]
  },
  {
    "id": "afd44cd4d039c944",
    "type": "switch",
    "z": "71aaba71cce9c427",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "empty"
      },
      {
        "t": "nempty"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 290,
    "y": 260,
    "wires": [
      [
        "6fc64e31fd411624"
      ],
      [
        "ad6c02ae8accaff0"
      ]
    ]
  },
  {
    "id": "c6b798f9372643c9",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 590,
    "y": 240,
    "wires": [
      [
        "dda8ccfd4473274a"
      ]
    ]
  },
  {
    "id": "dda8ccfd4473274a",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "if (msg.payload == \"error\") {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": \"2\",\n        \"temperature\": \"\"\n    };\n\n    return msg;\n\n} else {\n\n    //현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\n    var curTemp = '';\n    if (msg.payload == 0) {\n        curTemp = '0';\n    } else {\n        curTemp = parseFloat(msg.payload) / 10;\n    }\n\n    //장치 국번\n    var unitid = msg.unitId;\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": '2',\n        \"temperature\": curTemp,\n    };\n\n    return msg;\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 785.0078125,
    "y": 239.5234375,
    "wires": [
      [
        "89049d108ca91436"
      ]
    ]
  },
  {
    "id": "6fc64e31fd411624",
    "type": "change",
    "z": "71aaba71cce9c427",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 440,
    "y": 160,
    "wires": [
      [
        "dda8ccfd4473274a"
      ]
    ]
  },
  {
    "id": "31ed2eacbc66eab1",
    "type": "switch",
    "z": "71aaba71cce9c427",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "empty"
      },
      {
        "t": "nempty"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 250,
    "y": 440,
    "wires": [
      [
        "b4bf6b0956c4a344"
      ],
      [
        "92a88c6456c3e5c3"
      ]
    ]
  },
  {
    "id": "b4bf6b0956c4a344",
    "type": "change",
    "z": "71aaba71cce9c427",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 420,
    "y": 380,
    "wires": [
      [
        "a99bc567aa9a74dc"
      ]
    ]
  },
  {
    "id": "37ec7f64f7cae804",
    "type": "switch",
    "z": "71aaba71cce9c427",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "empty"
      },
      {
        "t": "nempty"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 250,
    "y": 660,
    "wires": [
      [
        "ef2371dca066191c"
      ],
      [
        "c4b42554d17a5174"
      ]
    ]
  },
  {
    "id": "ef2371dca066191c",
    "type": "change",
    "z": "71aaba71cce9c427",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 420,
    "y": 620,
    "wires": [
      [
        "2dfa57b11a961b1f"
      ]
    ]
  },
  {
    "id": "55dcc85e39f69ef9",
    "type": "switch",
    "z": "71aaba71cce9c427",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "empty"
      },
      {
        "t": "nempty"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 250,
    "y": 760,
    "wires": [
      [
        "a620260c44682302"
      ],
      [
        "49173635fc7e7b79"
      ]
    ]
  },
  {
    "id": "cdb0339ffe3fd9b3",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 610,
    "y": 800,
    "wires": [
      [
        "3fa82b1b8f86c322"
      ]
    ]
  },
  {
    "id": "3fa82b1b8f86c322",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "if (msg.payload == \"error\") {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": \"5\",\n        \"temperature\": \"\"\n    };\n\n    return msg;\n\n} else {\n\n    //현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\n    var curTemp = '';\n    if (msg.payload == 0) {\n        curTemp = '0';\n    } else {\n        curTemp = parseFloat(msg.payload) / 10;\n    }\n\n    //장치 국번\n    var unitid = msg.unitId;\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": unitid,\n        \"temperature\": curTemp,\n    };\n\n    return msg;\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 800,
    "y": 780,
    "wires": [
      [
        "91ccd89c32fff6c3"
      ]
    ]
  },
  {
    "id": "a620260c44682302",
    "type": "change",
    "z": "71aaba71cce9c427",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 420,
    "y": 740,
    "wires": [
      [
        "3fa82b1b8f86c322"
      ]
    ]
  },
  {
    "id": "0584f2ba84b44bf5",
    "type": "switch",
    "z": "71aaba71cce9c427",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "empty"
      },
      {
        "t": "nempty"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 250,
    "y": 880,
    "wires": [
      [
        "5b1f4cbdb6c20595"
      ],
      [
        "66b88661e08d4a61"
      ]
    ]
  },
  {
    "id": "5b1f4cbdb6c20595",
    "type": "change",
    "z": "71aaba71cce9c427",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 420,
    "y": 860,
    "wires": [
      [
        "38f863fc75e0bb41"
      ]
    ]
  },
  {
    "id": "db97c61d48d6e778",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 610,
    "y": 920,
    "wires": [
      [
        "38f863fc75e0bb41"
      ]
    ]
  },
  {
    "id": "38f863fc75e0bb41",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "if (msg.payload == \"error\") {\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": \"6\",\n        \"temperature\": \"\"\n    };\n\n    return msg;\n\n} else {\n\n    //현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\n    var curTemp = '';\n    if (msg.payload == 0) {\n        curTemp = '0';\n    } else {\n        curTemp = parseFloat(msg.payload) / 10;\n    }\n\n    //장치 국번\n    var unitid = msg.unitId;\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0058\",\n        \"kind\": \"4\",\n        \"deviceId\": unitid,\n        \"temperature\": curTemp,\n    };\n\n    return msg;\n\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 800,
    "y": 900,
    "wires": [
      [
        "b04e6ba2cb538427"
      ]
    ]
  },
  {
    "id": "fefc33e3610d2c23",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 990,
    "y": 240,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "89049d108ca91436",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 950,
    "y": 300,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "cc74221dc6983613",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 930,
    "y": 420,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "f6d52c9c4b0259b3",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 930,
    "y": 540,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "91ccd89c32fff6c3",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 950,
    "y": 720,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "b04e6ba2cb538427",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 1010,
    "y": 800,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "108c69b34b0807ed",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 10",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 380,
    "y": 300,
    "wires": []
  },
  {
    "id": "bd2a3a61a5f904a4",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 11",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 380,
    "y": 340,
    "wires": []
  },
  {
    "id": "9d9814a2ee12a5a4",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 12",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 300,
    "wires": []
  },
  {
    "id": "a49eb1caaff02b8e",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 13",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 340,
    "wires": []
  },
  {
    "id": "0b44131b66fedb65",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 14",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 780,
    "y": 300,
    "wires": []
  },
  {
    "id": "e5bef687ff781284",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 15",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 780,
    "y": 340,
    "wires": []
  },
  {
    "id": "2890902de149b147",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 16",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 300,
    "y": 1520,
    "wires": []
  }
]