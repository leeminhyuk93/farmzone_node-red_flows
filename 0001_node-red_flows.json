[
  {
    "id": "9b93c16511fc3f7f",
    "type": "tab",
    "label": "플로우 2",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "1e0727219db531c9",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM12",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "69f8968ff99cb06f",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM13",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 1,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "5da85d82d32e41a3",
    "type": "serial-port",
    "d": true,
    "serialport": "COM11",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "waitfor": "",
    "dtr": "none",
    "rts": "none",
    "cts": "none",
    "dsr": "none",
    "newline": "200",
    "bin": "false",
    "out": "time",
    "addchar": "",
    "responsetimeout": "10000"
  },
  {
    "id": "c7e5282f18b1108f",
    "type": "inject",
    "z": "9b93c16511fc3f7f",
    "d": true,
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "2",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 160,
    "y": 700,
    "wires": [
      [
        "ce866e6260d23a0a"
      ]
    ]
  },
  {
    "id": "ce866e6260d23a0a",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "d": true,
    "name": "buffer",
    "func": "//To read values of display for 7 deviceID\nmsg.payload = Buffer.from([2, 82, 83, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 10 ]);\nreturn msg;\n\n//4번째 자리 장치 번호, '55'가 7번 (hex : 37)\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 700,
    "wires": [
      [
        "f863018446d6f8d7"
      ]
    ]
  },
  {
    "id": "d89fa0d63611c765",
    "type": "comment",
    "z": "9b93c16511fc3f7f",
    "name": "SIG",
    "info": "디스플레이 값을 불러오는 쿼리\n\nASCII로 불러와서 숫자를 포함한 단위(문자)도 같이\n포함되니, 필요한 값만 DB에 저장할 수 있도록 수정이\n필요할 수 있음",
    "x": 110,
    "y": 660,
    "wires": []
  },
  {
    "id": "a4e408c03b2c2e8f",
    "type": "inject",
    "z": "9b93c16511fc3f7f",
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "600",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 160,
    "y": 120,
    "wires": [
      [
        "561e697e95310621"
      ]
    ]
  },
  {
    "id": "55daa5d40673ad8b",
    "type": "delay",
    "z": "9b93c16511fc3f7f",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 330,
    "y": 180,
    "wires": [
      [
        "3b33d78e8ce57481",
        "1e1b538f43576b10"
      ]
    ]
  },
  {
    "id": "c4416050754c797f",
    "type": "comment",
    "z": "9b93c16511fc3f7f",
    "name": "CNT P-100 (1~6)",
    "info": "1~3번까지는 포트7(임시)로 \n4~6번까지는 포트8(임시)로 지정되었으니\n\n실제 적용 시 포트 번호만 변경 후 사용",
    "x": 120,
    "y": 60,
    "wires": []
  },
  {
    "id": "ad6c02ae8accaff0",
    "type": "delay",
    "z": "9b93c16511fc3f7f",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 330,
    "y": 220,
    "wires": [
      [
        "b7edd10ea477d32f",
        "1e1b538f43576b10"
      ]
    ]
  },
  {
    "id": "1dae8e8565c08648",
    "type": "delay",
    "z": "9b93c16511fc3f7f",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 330,
    "y": 260,
    "wires": [
      [
        "1e1b538f43576b10"
      ]
    ]
  },
  {
    "id": "bf96f88cdf4fcf67",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "name": "send api",
    "func": "//현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar curTemp = parseFloat(msg.payload) / 10;\n\n//장치 국번\nvar unitid = msg.unitId;\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nmsg.payload = {\n    \"ccode\": \"0001\",\n    \"kind\": \"3\",\n    \"deviceId\": unitid,\n    \"temperature\": curTemp,\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 680,
    "y": 120,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "730b815e66188856",
    "type": "debug",
    "z": "9b93c16511fc3f7f",
    "name": "debug for TCs",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "true",
    "targetType": "full",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 1080,
    "y": 300,
    "wires": []
  },
  {
    "id": "5c42143514d8c3b3",
    "type": "debug",
    "z": "9b93c16511fc3f7f",
    "d": true,
    "name": "debug for SIG",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 820,
    "y": 700,
    "wires": []
  },
  {
    "id": "01ae02209ff047fa",
    "type": "http request",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 870,
    "y": 620,
    "wires": [
      []
    ]
  },
  {
    "id": "54c9f93776a09746",
    "type": "http request",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://dochuck.smarthaccpman.com/smh-api/c0001/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 890,
    "y": 300,
    "wires": [
      [
        "730b815e66188856"
      ]
    ]
  },
  {
    "id": "ee6dd11e0d0e1ec1",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "name": "function 1",
    "func": "let val = msg.payload;\nlet val1 = val.substr(5, 1);\nlet val2 = val.substr(6, 2);\nlet val3 = val.substr(8, 4);\n\nif(val2 == \"00\") {\n    val2 = \"0\";\n}\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"ccode\": \"0001\",\n    \"scode\": \"\",\n    \"pressure\": (val1 + val2 + val3)\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 660,
    "y": 620,
    "wires": [
      []
    ]
  },
  {
    "id": "1ff650803dfd0294",
    "type": "debug",
    "z": "9b93c16511fc3f7f",
    "name": "debug for TCs",
    "active": true,
    "tosidebar": false,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 580,
    "y": 320,
    "wires": []
  },
  {
    "id": "43eb23bc52bea4c2",
    "type": "inject",
    "z": "9b93c16511fc3f7f",
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "600",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 160,
    "y": 320,
    "wires": [
      [
        "8a9c66b58a1a8453"
      ]
    ]
  },
  {
    "id": "b8304ec418a4e483",
    "type": "delay",
    "z": "9b93c16511fc3f7f",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 330,
    "y": 380,
    "wires": [
      [
        "678222b5d6d94828",
        "9e2cbc00d3b7fde2"
      ]
    ]
  },
  {
    "id": "3a12497af2be0976",
    "type": "delay",
    "z": "9b93c16511fc3f7f",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 330,
    "y": 420,
    "wires": [
      [
        "382add8b62c937c3",
        "9e2cbc00d3b7fde2"
      ]
    ]
  },
  {
    "id": "f83fb75dbcf6b29a",
    "type": "delay",
    "z": "9b93c16511fc3f7f",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 330,
    "y": 460,
    "wires": [
      [
        "9e2cbc00d3b7fde2"
      ]
    ]
  },
  {
    "id": "dd8a9a280f332d9a",
    "type": "debug",
    "z": "9b93c16511fc3f7f",
    "name": "debug for TCs",
    "active": true,
    "tosidebar": false,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 560,
    "y": 500,
    "wires": []
  },
  {
    "id": "5feab99d4fdc5405",
    "type": "inject",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "3",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 780,
    "wires": [
      [
        "14520d3e5557dd64"
      ]
    ]
  },
  {
    "id": "1754a9833b451969",
    "type": "tcp request",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "server": "192.168.0.26",
    "port": "5000",
    "out": "time",
    "ret": "string",
    "splitc": "100",
    "newline": "",
    "trim": false,
    "tls": "",
    "x": 340,
    "y": 900,
    "wires": [
      [
        "7308546795389b32",
        "b604e65355601260"
      ]
    ]
  },
  {
    "id": "f81863b30b519ba1",
    "type": "debug",
    "z": "9b93c16511fc3f7f",
    "name": "debug for SIG",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 1060,
    "y": 780,
    "wires": []
  },
  {
    "id": "14520d3e5557dd64",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "name": "buffer",
    "func": "//To read values of display for 7 deviceID\nmsg.payload = Buffer.from([2, 82, 83, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 10]);\nreturn msg;\n\n//4번째 자리 장치 번호, '55'가 7번 (hex : 37)\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 150,
    "y": 880,
    "wires": [
      [
        "1754a9833b451969"
      ]
    ]
  },
  {
    "id": "b604e65355601260",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "name": "refine data",
    "func": "var result1 = msg.payload.substr(6, 5);\nvar result2 = msg.payload.substr(5, 6);\n\nif(msg.payload.length == '19'){\n    msg.payload = {\n        \"result1\": result1\n    };\n    return msg;\n}\n\n\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610,
    "y": 920,
    "wires": [
      [
        "dc92c8ae92ea02f8"
      ]
    ]
  },
  {
    "id": "e89fec5b25956799",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "name": "send api",
    "func": "//현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar curTemp = parseFloat(msg.payload) / 10;\n\n//장치 국번\nvar unitid = msg.unitId;\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nmsg.payload = {\n    \"ccode\": \"0001\",\n    \"kind\": \"6\",\n    \"deviceId\": unitid,\n    \"temperature\": curTemp,\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 380,
    "wires": [
      [
        "54c9f93776a09746"
      ]
    ]
  },
  {
    "id": "eb5840c75942e2f9",
    "type": "http request",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://dochuck.smarthaccpman.com/smh-api/c0001/get_cleanser",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 990,
    "y": 920,
    "wires": [
      []
    ]
  },
  {
    "id": "dc92c8ae92ea02f8",
    "type": "function",
    "z": "9b93c16511fc3f7f",
    "name": "send api",
    "func": "//현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar pressure = parseFloat(msg.payload['result1']) / 1000;\n\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nmsg.payload = {\n    \"ccode\": \"0001\",\n    \"scode\": \"73\",\n    \"pressure\": pressure,\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 800,
    "y": 920,
    "wires": [
      [
        "eb5840c75942e2f9",
        "f81863b30b519ba1"
      ]
    ]
  },
  {
    "id": "7308546795389b32",
    "type": "debug",
    "z": "9b93c16511fc3f7f",
    "name": "debug for SIG",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 760,
    "y": 800,
    "wires": []
  },
  {
    "id": "561e697e95310621",
    "type": "modbus-getter",
    "z": "9b93c16511fc3f7f",
    "name": "1",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "69f8968ff99cb06f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 150,
    "y": 180,
    "wires": [
      [
        "55daa5d40673ad8b"
      ],
      []
    ]
  },
  {
    "id": "3b33d78e8ce57481",
    "type": "modbus-getter",
    "z": "9b93c16511fc3f7f",
    "name": "2",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "69f8968ff99cb06f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 150,
    "y": 220,
    "wires": [
      [
        "ad6c02ae8accaff0"
      ],
      []
    ]
  },
  {
    "id": "b7edd10ea477d32f",
    "type": "modbus-getter",
    "z": "9b93c16511fc3f7f",
    "name": "3",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "3",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "69f8968ff99cb06f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 150,
    "y": 260,
    "wires": [
      [
        "1dae8e8565c08648"
      ],
      []
    ]
  },
  {
    "id": "8a9c66b58a1a8453",
    "type": "modbus-getter",
    "z": "9b93c16511fc3f7f",
    "name": "4",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "4",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "1e0727219db531c9",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 150,
    "y": 380,
    "wires": [
      [
        "b8304ec418a4e483"
      ],
      []
    ]
  },
  {
    "id": "678222b5d6d94828",
    "type": "modbus-getter",
    "z": "9b93c16511fc3f7f",
    "name": "5",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "5",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "1e0727219db531c9",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 150,
    "y": 420,
    "wires": [
      [
        "3a12497af2be0976"
      ],
      []
    ]
  },
  {
    "id": "382add8b62c937c3",
    "type": "modbus-getter",
    "z": "9b93c16511fc3f7f",
    "name": "6",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "6",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "1e0727219db531c9",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 150,
    "y": 460,
    "wires": [
      [
        "f83fb75dbcf6b29a"
      ],
      []
    ]
  },
  {
    "id": "1e1b538f43576b10",
    "type": "buffer-parser",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 510,
    "y": 200,
    "wires": [
      [
        "bf96f88cdf4fcf67",
        "1ff650803dfd0294"
      ]
    ]
  },
  {
    "id": "9e2cbc00d3b7fde2",
    "type": "buffer-parser",
    "z": "9b93c16511fc3f7f",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 530,
    "y": 400,
    "wires": [
      [
        "dd8a9a280f332d9a",
        "e89fec5b25956799"
      ]
    ]
  },
  {
    "id": "f863018446d6f8d7",
    "type": "serial request",
    "z": "9b93c16511fc3f7f",
    "d": true,
    "name": "",
    "serial": "5da85d82d32e41a3",
    "x": 550,
    "y": 700,
    "wires": [
      [
        "5c42143514d8c3b3"
      ]
    ]
  }
]