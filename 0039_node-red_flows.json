[
  {
    "id": "ea534a0bb0b5928e",
    "type": "tab",
    "label": "Data Insert DB",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "88eb231280c2e9e9",
    "type": "tab",
    "label": "Send API",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "34cbadba494cdf22",
    "type": "tab",
    "label": "DB Data remove",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "07e8b8ad6d28c925",
    "type": "modbus-client",
    "name": "smg-5420_1",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.201",
    "tcpPort": "5001",
    "tcpType": "DEFAULT",
    "serialPort": "COM4",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": false,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "8ef41b99e87b0433",
    "type": "modbus-client",
    "name": "smg-5420_4",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.204",
    "tcpPort": "5004",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB0",
    "serialType": "RTU",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "4",
    "commandDelay": "100",
    "clientTimeout": "2000",
    "reconnectOnTimeout": false,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true
  },
  {
    "id": "78d380a20265ae5e",
    "type": "modbus-client",
    "name": "smg-5420_2",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.202",
    "tcpPort": "5002",
    "tcpType": "DEFAULT",
    "serialPort": "COM10",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "0",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": false,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "feae362ac7930cae",
    "type": "modbus-client",
    "name": "smg_5420_3",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.203",
    "tcpPort": "5003",
    "tcpType": "DEFAULT",
    "serialPort": "COM10",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "0",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": false,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "da28b1d93eba7f99",
    "type": "mongodb",
    "hostname": "127.0.0.1",
    "topology": "direct",
    "connectOptions": "",
    "port": "27017",
    "db": "fz_shm",
    "name": ""
  },
  {
    "id": "66eedb276c7fa439",
    "type": "modbus-client",
    "name": "에어클리너 PLC(디씨팩)",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.206",
    "tcpPort": "5006",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "844eeda3a12d891f",
    "type": "modbus-client",
    "name": "에어세척기 _PLC(SK팩)",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.205",
    "tcpPort": "5005",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 2,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "70a908f6e7075909",
    "type": "modbus-client",
    "name": "모노블럭 시스템_PLC",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.222.207",
    "tcpPort": "5007",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "3",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "8c3a0a0b2c4c903a",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 100,
    "wires": [
      [
        "4410c4f6f859597f"
      ]
    ]
  },
  {
    "id": "4410c4f6f859597f",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5420_1",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "07e8b8ad6d28c925",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 290,
    "y": 100,
    "wires": [
      [
        "8a287edeb8a9cbb0"
      ],
      []
    ]
  },
  {
    "id": "1258f7f276b80bb8",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 101",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 650,
    "y": 60,
    "wires": []
  },
  {
    "id": "883f1373cbc35b7b",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 280,
    "wires": [
      [
        "1bafa0bd6d1b8b76"
      ]
    ]
  },
  {
    "id": "b895b5c13dda070d",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 480,
    "wires": [
      [
        "147ca1be8a9ed725"
      ]
    ]
  },
  {
    "id": "167d8937c61825bf",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 660,
    "wires": [
      [
        "ac06a5939d2c44b6"
      ]
    ]
  },
  {
    "id": "6a328979ef9afcec",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "1층 팜유저장탱크 온도, 온도센서",
    "info": "*온도제어기\n-제조사 : 코노텍\n-모델명 : TP10",
    "x": 170,
    "y": 620,
    "wires": []
  },
  {
    "id": "ac06a5939d2c44b6",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5420_4",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "4",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "8ef41b99e87b0433",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 290,
    "y": 660,
    "wires": [
      [
        "5cd5f49bd3cdbf60",
        "6d3c85b4d97a0a33"
      ],
      []
    ]
  },
  {
    "id": "5a45b7aa3ebaaa4a",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 102",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 650,
    "y": 240,
    "wires": []
  },
  {
    "id": "51769f5661a2d345",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 103",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 650,
    "y": 440,
    "wires": []
  },
  {
    "id": "3d3e720a28627ba8",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 104",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 670,
    "y": 640,
    "wires": []
  },
  {
    "id": "1bafa0bd6d1b8b76",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5420_2",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "78d380a20265ae5e",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 290,
    "y": 280,
    "wires": [
      [
        "648b4c34358532ae"
      ],
      []
    ]
  },
  {
    "id": "147ca1be8a9ed725",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5420_3",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "3",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "1",
    "server": "feae362ac7930cae",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 290,
    "y": 480,
    "wires": [
      [
        "16c25fc39e702fc7"
      ],
      []
    ]
  },
  {
    "id": "8a287edeb8a9cbb0",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let device_id = 1;\nlet pressure = msg.payload[0] / 100;\nlet date = new Date();\nlet dateTime = date.toLocaleString();\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"device_name\": \"압력계1\",\n    \"ccode\": \"0039\",\n    \"scode\": \"79\",\n    \"pressure\": pressure,\n    \"date\": dateTime,  // 사용자가 보기 편한 날짜/시간\n    \"check_date\": date  // 시간 조건 조회를 위한 키\n}\n\n\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 100,
    "wires": [
      [
        "1258f7f276b80bb8",
        "15256f6ef2e74007",
        "b91a0cbef2fcc1e8"
      ]
    ]
  },
  {
    "id": "648b4c34358532ae",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let device_id = 2;\nlet pressure = msg.payload[0] / 100;\nlet date = new Date();\nlet dateTime = date.toLocaleString();\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"device_name\": \"압력계2\",\n    \"ccode\": \"0039\",\n    \"scode\": \"80\",\n    \"pressure\": pressure,\n    \"date\": dateTime,  // 사용자가 보기 편한 날짜/시간\n    \"check_date\": date  // 시간 조건 조회를 위한 키\n}\n\n\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 280,
    "wires": [
      [
        "5a45b7aa3ebaaa4a",
        "50d37271fd9016d8",
        "920e02f39e3339c7"
      ]
    ]
  },
  {
    "id": "16c25fc39e702fc7",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let device_id = 3;\nlet pressure = msg.payload[0] / 100;\nlet date = new Date();\nlet dateTime = date.toLocaleString();\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"device_name\": \"압력계3\",\n    \"ccode\": \"0039\",\n    \"scode\": \"81\",\n    \"pressure\": pressure,\n    \"date\": dateTime,  // 사용자가 보기 편한 날짜/시간\n    \"check_date\": date  // 시간 조건 조회를 위한 키\n}\n\n\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 480,
    "wires": [
      [
        "51769f5661a2d345",
        "488ae34828cc17bc",
        "c885625cd169de11"
      ]
    ]
  },
  {
    "id": "5cd5f49bd3cdbf60",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let device_id = 4;\nlet temp = \"\";\nlet date = new Date();\nlet dateTime = date.toLocaleString();\n\nif (msg.payload == \"error\") {\n    temp = \"\";\n} else {\n    temp = parseFloat(msg.payload[0]) / 10;\n}\n\nmsg.payload = {\n    \"device_name\": \"TP10\",\n    \"device_id\": device_id,\n    \"temp\": temp,\n    \"date\": dateTime,  // 사용자가 보기 편한 날짜/시간\n    \"check_date\": date  // 시간 조건 조회를 위한 키\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 660,
    "wires": [
      [
        "3d3e720a28627ba8",
        "fe9b98bb790278c3"
      ]
    ]
  },
  {
    "id": "15256f6ef2e74007",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "filter_pressure1",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 720,
    "y": 100,
    "wires": []
  },
  {
    "id": "50d37271fd9016d8",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "filter_pressure2",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 720,
    "y": 280,
    "wires": []
  },
  {
    "id": "488ae34828cc17bc",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "filter_pressure3",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 720,
    "y": 480,
    "wires": []
  },
  {
    "id": "fe9b98bb790278c3",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "oilTank_temp",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 860,
    "y": 680,
    "wires": []
  },
  {
    "id": "112a618bbe39ff09",
    "type": "catch",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "scope": [
      "ac06a5939d2c44b6"
    ],
    "uncaught": false,
    "x": 110,
    "y": 740,
    "wires": [
      [
        "73f43b6060acf441"
      ]
    ]
  },
  {
    "id": "73f43b6060acf441",
    "type": "change",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "error",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 260,
    "y": 740,
    "wires": [
      [
        "5cd5f49bd3cdbf60"
      ]
    ]
  },
  {
    "id": "2297bdf14bb43790",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "2층_작업장, PLC1_에어세척기(SK팩) pet ",
    "info": "*수집 장비 : 에어세척기\n*수집 항목 : 에어압력, 작동 시간\n*수집 주기 : 발생 시",
    "x": 200,
    "y": 860,
    "wires": []
  },
  {
    "id": "a59743946e966b09",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "2층_작업장, PLC2_에어클리너(디씨팩) 캔 에어압",
    "info": "*수집 장비 : 에어클리너\n*수집 항목 : 에어압력, 작동시간\n*수집 주기 : 발생 시\n\n - 비트 읽기 영역 : D02002.0  (가동시간 계산용)\n하루마다 1이 처음 들어올때 시간 체크와 0으로 바뀌었을때 시간 체크해서\n하루 총 가동시간 계산하기\n - 작동중 데이터(비트) 출력되는 값 : 1\n - 작동 중지 데이터(비트) 출력되는 값 : 0",
    "x": 200,
    "y": 1000,
    "wires": []
  },
  {
    "id": "80e1988f66539f11",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "2층_작업장, PLC3_모노블럭시스템",
    "info": "*수집 장비 : 모노블럭시스템\n*수집 항목 : 충진 및 원터치캡핑 \n        생산수량(워드), 가동 상태(비트)\n*수집 주기 : 발생 시\n\n\n - 비트 읽기 ���역 : D02002.0  (가동시간 계산용)\n하루마다 1이 처음 들어올때 시간 체크와 0으로 바뀌었을때 시간 체크해서\n하루 총 가동시간 계산하기\n - 작동중 데이터(비트) 출력되는 값 : 1\n - 작동 중지 데이터(비트) 출력되는 값 : 0",
    "x": 180,
    "y": 1200,
    "wires": []
  },
  {
    "id": "f7989dc694da61bc",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "1",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 900,
    "wires": [
      [
        "08f4d3cecf600ee1"
      ]
    ]
  },
  {
    "id": "412fc6ac5eefbbdc",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "1",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1080,
    "wires": [
      [
        "98ca6ed80dbb2fc6"
      ]
    ]
  },
  {
    "id": "f2ea3e59bff573e9",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "1",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1240,
    "wires": [
      [
        "3ecec96b54e0e69e"
      ]
    ]
  },
  {
    "id": "08f4d3cecf600ee1",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "5",
    "server": "844eeda3a12d891f",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 280,
    "y": 900,
    "wires": [
      [
        "fa0d9b9c212c6ecc",
        "9b9f385b35d6e065"
      ],
      []
    ]
  },
  {
    "id": "98ca6ed80dbb2fc6",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "5",
    "server": "66eedb276c7fa439",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 280,
    "y": 1080,
    "wires": [
      [
        "8e151000ede4cf6f",
        "7bdf110d9ff41ccc"
      ],
      []
    ]
  },
  {
    "id": "417059960c441b37",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 111",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 860,
    "wires": []
  },
  {
    "id": "49e8edfc926697e4",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "air_washer",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 670,
    "y": 900,
    "wires": []
  },
  {
    "id": "cfa3c92809c069bb",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 112",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 1040,
    "wires": []
  },
  {
    "id": "316120ec6a8821de",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "air_cleaner",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 670,
    "y": 1080,
    "wires": []
  },
  {
    "id": "4a1573ab1532a224",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 113",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 1220,
    "wires": []
  },
  {
    "id": "a358cd79b02f0d20",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "mono_block",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 670,
    "y": 1260,
    "wires": []
  },
  {
    "id": "3321e827fbfe351a",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "2층_작업장, PLC3_비전카메라",
    "info": "*수집 장비 : 비전카메라\n*수집 항목 : 비전카메라 이미지\n*수집 주기 : 발생 시",
    "x": 170,
    "y": 1360,
    "wires": []
  },
  {
    "id": "7b09ed9e59da4dc0",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 1400,
    "wires": [
      [
        "83792cafbe04e79f"
      ]
    ]
  },
  {
    "id": "7cdcfebf94f79a85",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "function 4",
    "func": "\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 480,
    "y": 1400,
    "wires": [
      [
        "cf8adcdbf6404c2a",
        "68d63211b7d4b450"
      ]
    ]
  },
  {
    "id": "cf8adcdbf6404c2a",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 114",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 650,
    "y": 1380,
    "wires": []
  },
  {
    "id": "68d63211b7d4b450",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "vision_camera",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 720,
    "y": 1420,
    "wires": []
  },
  {
    "id": "bfc6e4ebb711d503",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "2층_작업장, 중량검사기",
    "info": "*수집 장비 : 중량검사기\n*수집 항목 : 생산품 중량\n*수집 주기 : 발생 시",
    "x": 140,
    "y": 1520,
    "wires": []
  },
  {
    "id": "4d3b73d13e4d3962",
    "type": "inject",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 1560,
    "wires": [
      [
        "c1bdaac07ca8784c"
      ]
    ]
  },
  {
    "id": "52f69a337c09f4a5",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "function 6",
    "func": "\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 480,
    "y": 1560,
    "wires": [
      [
        "3427b1e3fafb80cf",
        "f02db0ada20309d5"
      ]
    ]
  },
  {
    "id": "3427b1e3fafb80cf",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 116",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 650,
    "y": 1540,
    "wires": []
  },
  {
    "id": "f02db0ada20309d5",
    "type": "mongodb out",
    "z": "ea534a0bb0b5928e",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "weight_checker",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "store",
    "x": 720,
    "y": 1580,
    "wires": []
  },
  {
    "id": "3ecec96b54e0e69e",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "name": "smg-5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "3",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "5",
    "server": "70a908f6e7075909",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 280,
    "y": 1240,
    "wires": [
      [
        "950ad5742575087c"
      ],
      []
    ]
  },
  {
    "id": "83792cafbe04e79f",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "d": true,
    "name": "",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "",
    "dataType": "",
    "adr": "",
    "quantity": "",
    "server": "07e8b8ad6d28c925",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 300,
    "y": 1400,
    "wires": [
      [
        "7cdcfebf94f79a85"
      ],
      []
    ]
  },
  {
    "id": "c1bdaac07ca8784c",
    "type": "modbus-getter",
    "z": "ea534a0bb0b5928e",
    "d": true,
    "name": "",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "",
    "dataType": "",
    "adr": "",
    "quantity": "",
    "server": "07e8b8ad6d28c925",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 300,
    "y": 1560,
    "wires": [
      [
        "52f69a337c09f4a5"
      ],
      []
    ]
  },
  {
    "id": "b91a0cbef2fcc1e8",
    "type": "http request",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0039/get_pos_filter",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 650,
    "y": 160,
    "wires": [
      [
        "2977b2f8b41cead8"
      ]
    ]
  },
  {
    "id": "2977b2f8b41cead8",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 129",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 810,
    "y": 160,
    "wires": []
  },
  {
    "id": "920e02f39e3339c7",
    "type": "http request",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0039/get_pos_filter",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 650,
    "y": 340,
    "wires": [
      [
        "020c63f8041fcec1"
      ]
    ]
  },
  {
    "id": "020c63f8041fcec1",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 130",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 810,
    "y": 340,
    "wires": []
  },
  {
    "id": "c885625cd169de11",
    "type": "http request",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0039/get_pos_filter",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 650,
    "y": 540,
    "wires": [
      [
        "bedb1235991ec1f0"
      ]
    ]
  },
  {
    "id": "bedb1235991ec1f0",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 131",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 810,
    "y": 540,
    "wires": []
  },
  {
    "id": "5db1e5a0bd39c665",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "1층 여과압력1 데이터_CCP-1P 여과(PET)",
    "info": "*디지털 인디게이터\n제조사 : sensys\n모델명 : A1-1000",
    "x": 200,
    "y": 60,
    "wires": []
  },
  {
    "id": "013540c1d280655f",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "1층 여과압력2 데이터_CP여과",
    "info": "*디지털 인디게이터\n제조사 : sensys\n모델명 : A1-1000",
    "x": 170,
    "y": 240,
    "wires": []
  },
  {
    "id": "ca3670b1902c6ad2",
    "type": "comment",
    "z": "ea534a0bb0b5928e",
    "name": "1층 여과압력3 데이터_CCP-1P 여과(캔)",
    "info": "*디지털 인디게이터\n제조사 : sensys\n모델명 : A1-1000",
    "x": 190,
    "y": 440,
    "wires": []
  },
  {
    "id": "950ad5742575087c",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let totalCount = msg.payload[0];   // 총 생산량\nlet status = msg.payload[2];       // 가동 상태\n\nlet prev_status = status;    // 이전 가동 상태 (현재 가동 상태와 비교하여 다를 때마다 체크)\nlet check = (prev_status != status) ? 1 : 0;  // 비교하여 다르면 1 같으면 0\nlet start_check = \"\";  // 가동 시작 체크\nlet end_check = \"\";    // 가동 종료 체크\nvar start_time = 0;   // 가동 시작 시간\nvar end_time = 0;    // 가동 종료 시간\nlet operatingTime = 0;  // 총 가동 시간\nlet dateTime = new Date();  // 현재 시간\nlet saveTimeUser = dateTime.toLocaleString();  //저장된 시간(사용자용)\n\nif (check == 1 && status == 1) { // 가동 시작 체크 : check 값이 1이면서 status 값이 1일때 시간 확인\n    start_check = \"시작\";   // 가동 상태 체크\n    start_time = dateTime.getTime();  // 가동 시작 시간 체크\n} else if (check == 1 && status == 0) { // 가동 종료 시간 : check 값이 1이면서 status 값이 0일때 시간 확인\n    end_check = \"종료\";   // 가동 상태 체크\n    end_time = dateTime.getTime();  // 가동 종료 시간 체크\n}\n\nif (start_check == \"시작\" && end_check == \"종료\") {\n    start_check = \"\"; // 변수값 초기화\n    end_check = \"\";   // 변수값 초기화\n\n    operatingTime = end_time - start_time;\n\n    let hours = Math.floor(operatingTime / 3600000);\n    let minutes = Math.floor((operatingTime % 3600000) / 60000);\n    let seconds = Math.floor((operatingTime % 60000) / 1000);\n\n    operatingTime = `${hours}시 ${minutes}분 ${seconds}초`;\n}\n\nmsg.payload = {\n    \"equipName\" : \"모노블럭 시스템\",   //장비명\n    \"totalCount\" : totalCount,        //총 생산량\n    \"status\" : status,                //가동상태\n    \"startTime\" : start_time,         //가동 시작시간\n    \"endTime\": end_time,              //가동 종료시간\n    \"operatingTime\" : operatingTime,  //가동시간\n    \"saveTimeUser\" : saveTimeUser,    //저장시간\n    \"saveTimeDB\" : dateTime           //저장시간(find용)\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 1240,
    "wires": [
      [
        "4a1573ab1532a224",
        "a358cd79b02f0d20"
      ]
    ]
  },
  {
    "id": "8e151000ede4cf6f",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let pressure = 0;  // 에어 압력\nlet dateTime = new Date();  // 현재 시간\nlet saveDateTime = dateTime.toLocaleString();  //저장 시간\n\nif (msg.payload[0] <= 980) {\n    pressure = Math.abs((msg.payload[0] / 10000) - 0.095);\n} else {\n    pressure = msg.payload[0] / 10000;  // 에어 압력\n}\n\npressure = pressure.toFixed(2);\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"equipName\" : \"에어클리너(디씨팩)\",\n    \"ccode\": \"0039\",\n    \"scode\": \"84\",\n    \"pressure\" : pressure,\n    \"saveDateTime\": saveDateTime,      //저장 시간(사용자가 보기 편한 날짜/시간)\n    \"dateTime\": dateTime               // 저장 시간(DB find 활용)\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 1080,
    "wires": [
      [
        "cfa3c92809c069bb",
        "316120ec6a8821de"
      ]
    ]
  },
  {
    "id": "fa0d9b9c212c6ecc",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let pressure = 0;  // 에어 압력\nlet dateTime = new Date();  // 현재 시간\nlet saveDateTime = dateTime.toLocaleString();  //저장 시간\n\nif (msg.payload[0] <= 980) {\n    pressure = Math.abs((msg.payload[0] / 10000) - 0.095);\n} else {\n    pressure = (msg.payload[0] / 10000) - 0.07;  // 에어 압력\n}\n\npressure = pressure.toFixed(2);\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"equipName\" : \"에어세척기(SK팩)\",\n    \"ccode\": \"0039\",\n    \"scode\": \"83\",\n    \"pressure\" : pressure,\n    \"saveDateTime\": saveDateTime,      //저장 시간(사용자가 보기 편한 날짜/시간)\n    \"dateTime\": dateTime               // 저장 시간(DB find 활용)\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 900,
    "wires": [
      [
        "417059960c441b37",
        "49e8edfc926697e4"
      ]
    ]
  },
  {
    "id": "7bdf110d9ff41ccc",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 132",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 430,
    "y": 1040,
    "wires": []
  },
  {
    "id": "9b9f385b35d6e065",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 133",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 430,
    "y": 860,
    "wires": []
  },
  {
    "id": "259f037bc85cb7e3",
    "type": "http request",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 960,
    "wires": [
      [
        "ca24dd312478d4e6"
      ]
    ]
  },
  {
    "id": "ca24dd312478d4e6",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 134",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 770,
    "y": 960,
    "wires": []
  },
  {
    "id": "6d34a1eaa3610eef",
    "type": "http request",
    "z": "ea534a0bb0b5928e",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 1140,
    "wires": [
      [
        "8eee07ef527694d3"
      ]
    ]
  },
  {
    "id": "8eee07ef527694d3",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 135",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 770,
    "y": 1140,
    "wires": []
  },
  {
    "id": "344deeb164a4766c",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "globalSet",
    "func": "global.set(\"totalCount\", msg.payload[0]);  //총 생산량\nglobal.set(\"status\", msg.payload[2]);   // 현재 가동상태\n\nreturn;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 1280,
    "wires": [
      []
    ]
  },
  {
    "id": "4fa429ec5cfb8d46",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "parsing",
    "func": "let totalCount = msg.payload[0];   // 총 생산량\nlet status = msg.payload[2];       // 현재 가동 상태\nlet prevStatus = 0;               // 이전 가동 상태\nlet check = 0;                     // 현재 가동 상태와 이전 가동 상태 비교하여 같으면 0, 다르면 1로 체크\nlet startTime = null;   // 가동 시작 시간\nlet endTime = null;    // 가동 종료 시간\nlet operatingTime = null;  // 총 가동 시간\nlet dateTime = new Date();\n//let saveDateTime = dateTime.format('YYYY-MM-DD HH:mm:ss');\n\nif (prevStatus == status) {\n    check = 0;   // 상태가 동일하면 변경 없음\n} else {\n    check = 1;   // 상태가 변경되면 1로 설정\n    prevStatus = status;    // 현재 상태를 이전 상태 변수에 할당\n}\n\n// 상태가 변경되고, 상태가 1일 경우 작업 시작 시간 설정\nif (check == 1 && status == 1) { // 가동 시작 체크 : check 값이 1이면서 status 값이 1일때 시간 확인\n    startTime = dateTime;\n    startTime = startTime.format('YYYY-MM-DD HH:mm:ss');\n} \n\nif (check == 1 && status == 0) { // 가동 종료 시간 : check 값이 1이면서 status 값이 0일때 시간 확인\n    endTime = dateTime;\n    endTime = endTime.format('YYYY-MM-DD HH:mm:ss');\n\n    operatingTime = endTime.diff(startTime);\n    operatingTime = formatDuration(operatingTime);\n}\n\n// 밀리초를 시, 분, 초로 포맷팅\nfunction formatDuration(durationInMilliseconds) {\n    const duration = dateTime.duration(durationInMilliseconds);\n    return `${duration.hours()}시간 ${duration.minutes()}분 ${duration.seconds()}초`;\n}\n\n\nmsg.payload = {\n    \"equipName\" : \"모노블럭 시스템\",   //장비명\n    \"totalCount\" : totalCount,        //총 생산량\n    \"status\" : status,                //가동상태\n    \"startTime\": startTime,         //가동 시작시간\n    \"endTime\": endTime,              //가동 종료시간\n    \"operatingTime\": operatingTime,  //가동시간\n    //\"saveDateTime\": saveDateTime,    //저장시간\n    \"saveTimeDB\" : dateTime           //저장시간(find용)\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 1200,
    "wires": [
      []
    ]
  },
  {
    "id": "6d3c85b4d97a0a33",
    "type": "function",
    "z": "ea534a0bb0b5928e",
    "name": "send API",
    "func": "let device_id = 1;\nlet temp = msg.payload[0].temp;\n\n\nif (msg.payload == \"error\") {\n    temp = \"\";\n} else {\n    temp = parseFloat(msg.payload[0]) / 10;\n}\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"ccode\": \"0039\",\n    \"kind\": \"4\",\n    \"deviceId\": device_id,\n    \"temperature\": temp\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 720,
    "wires": [
      [
        "8bd37a078f294f5a"
      ]
    ]
  },
  {
    "id": "8bd37a078f294f5a",
    "type": "http request",
    "z": "ea534a0bb0b5928e",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0039/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 570,
    "y": 780,
    "wires": [
      [
        "c440edde71ed2ff8"
      ]
    ]
  },
  {
    "id": "c440edde71ed2ff8",
    "type": "debug",
    "z": "ea534a0bb0b5928e",
    "name": "debug 136",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 770,
    "y": 780,
    "wires": []
  },
  {
    "id": "62e4a209ec547825",
    "type": "mongodb in",
    "z": "88eb231280c2e9e9",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "oilTank_temp",
    "operation": "find",
    "x": 500,
    "y": 100,
    "wires": [
      [
        "06856015697b3367"
      ]
    ]
  },
  {
    "id": "06856015697b3367",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "send API",
    "func": "let device_id = msg.payload[0].device_id;\nlet temp = msg.payload[0].temp;\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"ccode\": \"0039\",\n    \"kind\": \"4\",\n    \"deviceId\": device_id,\n    \"temperature\": temp\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 180,
    "wires": [
      [
        "d0cb0c39f16a6ede",
        "6e4084f1b94dec35"
      ]
    ]
  },
  {
    "id": "6e4084f1b94dec35",
    "type": "debug",
    "z": "88eb231280c2e9e9",
    "name": "debug 107",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 160,
    "wires": []
  },
  {
    "id": "46978355c54fb930",
    "type": "inject",
    "z": "88eb231280c2e9e9",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "60",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 100,
    "wires": [
      [
        "8431e9b65e82db14"
      ]
    ]
  },
  {
    "id": "8431e9b65e82db14",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "find query",
    "func": "/* 설명\n  \"oilTank_temp\" 컬렉션에서 30초 이내에 저장된 데이터 중에 가장 최근 저장된 데이터 조회\n*/\n\nmsg.payload = {\n    \"check_date\": {\n        \"$gte\": new Date(Date.now() - 30 * 1000), // 현재 날짜 및 시간에서 30초 전의 날짜와 시간\n        \"$lte\": new Date()\n    }\n}\n\nmsg.sort = { \"check_date\": -1 }; // 내림차순 정렬\nmsg.limit = 1; // 최대 1개의 결과 반환\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 260,
    "y": 100,
    "wires": [
      [
        "62e4a209ec547825"
      ]
    ]
  },
  {
    "id": "be448e3ae59be512",
    "type": "comment",
    "z": "88eb231280c2e9e9",
    "name": "1층 팜유저장탱크 온도, 온도센서",
    "info": "*온도제어기\n-제조사 : 코노텍\n-모델명 : TP10",
    "x": 150,
    "y": 60,
    "wires": []
  },
  {
    "id": "d0cb0c39f16a6ede",
    "type": "http request",
    "z": "88eb231280c2e9e9",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0039/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 200,
    "wires": [
      [
        "87fed94f6762620a"
      ]
    ]
  },
  {
    "id": "e49d26715a52bb74",
    "type": "comment",
    "z": "88eb231280c2e9e9",
    "name": "2층_작업장, PLC3_모노블럭시스템",
    "info": "*수집 장비 : 모노블럭시스템\n*수집 항목 : 충진 및 원터치캡핑\n*수집 주기 : 발생 시",
    "x": 160,
    "y": 280,
    "wires": []
  },
  {
    "id": "7931a4a5bcacad90",
    "type": "comment",
    "z": "88eb231280c2e9e9",
    "name": "2층_작업장, PLC3_비전카메라",
    "info": "*수집 장비 : 비전카메라\n*수집 항목 : 비전카메라 이미지\n*수집 주기 : 발생 시",
    "x": 150,
    "y": 480,
    "wires": []
  },
  {
    "id": "589bf29b7b64887c",
    "type": "comment",
    "z": "88eb231280c2e9e9",
    "name": "2층_작업장, PLC3_중량검사기",
    "info": "*수집 장비 : 중량검사기\n*수집 항목 : 생산품 중량\n*수집 주기 : 발생 시",
    "x": 150,
    "y": 680,
    "wires": []
  },
  {
    "id": "2ec0cc819bb7b33a",
    "type": "inject",
    "z": "88eb231280c2e9e9",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 100,
    "y": 320,
    "wires": [
      [
        "199fb715cbfe6c7e"
      ]
    ]
  },
  {
    "id": "199fb715cbfe6c7e",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "find query",
    "func": "/* 설명\n  \"mono_block\" 컬렉션에서 30초 이내에 저장된 데이터 중에 가장 최근 저장된 ���이터 조회\n*/\n\nmsg.payload = {\n    \"check_date\": {\n        \"$gte\": new Date(Date.now() - 30 * 1000), // 현재 날짜 및 시간에서 30초 전의 날짜와 시간\n        \"$lte\": new Date()\n    }\n}\n\nmsg.sort = { \"check_date\": -1 }; // 내림차순 정렬\nmsg.limit = 1; // 최대 1개의 결과 반환\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 260,
    "y": 320,
    "wires": [
      [
        "ab99c48c3dcc5f98"
      ]
    ]
  },
  {
    "id": "ab99c48c3dcc5f98",
    "type": "mongodb in",
    "z": "88eb231280c2e9e9",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "mono_block",
    "operation": "find",
    "x": 490,
    "y": 320,
    "wires": [
      [
        "bd0a0aa6fe736da8"
      ]
    ]
  },
  {
    "id": "bd0a0aa6fe736da8",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "send API",
    "func": "let device_id = msg.payload[0].payload.device_id;\nlet mono_block = msg.payload[0].payload.mono_block;\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"ccode\": \"0039\",\n    \"scode\": \"\",\n    \"kind\": \"\",\n    \"deviceId\": device_id,\n    \"mono_block\": mono_block\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 400,
    "wires": [
      [
        "1e6fc0fa375b6dfb",
        "ef575d6e8444342c"
      ]
    ]
  },
  {
    "id": "ef575d6e8444342c",
    "type": "debug",
    "z": "88eb231280c2e9e9",
    "name": "debug 119",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 380,
    "wires": []
  },
  {
    "id": "1e6fc0fa375b6dfb",
    "type": "http request",
    "z": "88eb231280c2e9e9",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 420,
    "wires": [
      []
    ]
  },
  {
    "id": "8792e36a87888b61",
    "type": "inject",
    "z": "88eb231280c2e9e9",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 100,
    "y": 520,
    "wires": [
      [
        "d38451a7237e596f"
      ]
    ]
  },
  {
    "id": "d38451a7237e596f",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "find query",
    "func": "/* 설명\n  \"vision_camera\" 컬렉션에서 30초 이내에 저장된 데이터 중에 가장 최근 저장된 데이터 조회\n*/\n\nmsg.payload = {\n    \"check_date\": {\n        \"$gte\": new Date(Date.now() - 30 * 1000), // 현재 날짜 및 시간에서 30초 전의 날짜와 시간\n        \"$lte\": new Date()\n    }\n}\n\nmsg.sort = { \"check_date\": -1 }; // 내림차순 정렬\nmsg.limit = 1; // 최대 1개의 결과 반환\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 260,
    "y": 520,
    "wires": [
      [
        "d2b504bd7d78514a"
      ]
    ]
  },
  {
    "id": "d2b504bd7d78514a",
    "type": "mongodb in",
    "z": "88eb231280c2e9e9",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "vision_camera",
    "operation": "find",
    "x": 500,
    "y": 520,
    "wires": [
      [
        "87c83b29db901821"
      ]
    ]
  },
  {
    "id": "87c83b29db901821",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "send API",
    "func": "let device_id = msg.payload[0].payload.device_id;\nlet vision_camera = msg.payload[0].payload.vision_camera;\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"ccode\": \"0039\",\n    \"scode\": \"\",\n    \"kind\": \"\",\n    \"deviceId\": device_id,\n    \"vision_camera\": vision_camera\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 600,
    "wires": [
      [
        "8738935fc18bd06b",
        "2a4538a35530d8a4"
      ]
    ]
  },
  {
    "id": "2a4538a35530d8a4",
    "type": "debug",
    "z": "88eb231280c2e9e9",
    "name": "debug 120",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 580,
    "wires": []
  },
  {
    "id": "8738935fc18bd06b",
    "type": "http request",
    "z": "88eb231280c2e9e9",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 620,
    "wires": [
      []
    ]
  },
  {
    "id": "8c763b43829582b5",
    "type": "inject",
    "z": "88eb231280c2e9e9",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 100,
    "y": 720,
    "wires": [
      [
        "a5a4b681fc1d41a2"
      ]
    ]
  },
  {
    "id": "a5a4b681fc1d41a2",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "find query",
    "func": "/* 설명\n  \"weight_checker\" 컬렉션에서 30초 이내에 저장된 데이터 중에 가장 최근 저장된 데이터 조회\n*/\n\nmsg.payload = {\n    \"check_date\": {\n        \"$gte\": new Date(Date.now() - 30 * 1000), // 현재 날짜 및 시간에서 30초 전의 날짜와 시간\n        \"$lte\": new Date()\n    }\n}\n\nmsg.sort = { \"check_date\": -1 }; // 내림차순 정렬\nmsg.limit = 1; // 최대 1개의 결과 반환\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 260,
    "y": 720,
    "wires": [
      [
        "23061f8d4f809cf6"
      ]
    ]
  },
  {
    "id": "23061f8d4f809cf6",
    "type": "mongodb in",
    "z": "88eb231280c2e9e9",
    "mongodb": "da28b1d93eba7f99",
    "name": "",
    "collection": "weight_checker",
    "operation": "find",
    "x": 500,
    "y": 720,
    "wires": [
      [
        "ab4f922b6a70d325"
      ]
    ]
  },
  {
    "id": "ab4f922b6a70d325",
    "type": "function",
    "z": "88eb231280c2e9e9",
    "name": "send API",
    "func": "let device_id = msg.payload[0].payload.device_id;\nlet weight_checker = msg.payload[0].payload.weight_checker;\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json';\n\nmsg.payload = {\n    \"ccode\": \"0039\",\n    \"scode\": \"\",\n    \"kind\": \"\",\n    \"deviceId\": device_id,\n    \"weight_checker\": weight_checker\n}\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 800,
    "wires": [
      [
        "8ea90e17f06f9f05",
        "75b09ac3b6249fac"
      ]
    ]
  },
  {
    "id": "75b09ac3b6249fac",
    "type": "debug",
    "z": "88eb231280c2e9e9",
    "name": "debug 122",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 780,
    "wires": []
  },
  {
    "id": "8ea90e17f06f9f05",
    "type": "http request",
    "z": "88eb231280c2e9e9",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 820,
    "wires": [
      []
    ]
  },
  {
    "id": "87fed94f6762620a",
    "type": "debug",
    "z": "88eb231280c2e9e9",
    "name": "debug 128",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 790,
    "y": 200,
    "wires": []
  },
  {
    "id": "aaac308e8171396f",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 100,
    "wires": [
      [
        "237fc5c01c1f19ce"
      ]
    ]
  },
  {
    "id": "237fc5c01c1f19ce",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"filter_pressure1\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 100,
    "wires": [
      [
        "bed1f4f4a3cc5a5d"
      ]
    ]
  },
  {
    "id": "bed1f4f4a3cc5a5d",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "filter_pressure1",
    "collection": "filter_pressure1",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 500,
    "y": 100,
    "wires": []
  },
  {
    "id": "94e1c81f07a7c396",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "filter_pressure1 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 250,
    "y": 60,
    "wires": []
  },
  {
    "id": "277b8b35978965fe",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"filter_pressure2\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 200,
    "wires": [
      [
        "09e37fd9b52d2a59"
      ]
    ]
  },
  {
    "id": "09e37fd9b52d2a59",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "filter_pressure2",
    "collection": "filter_pressure2",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 500,
    "y": 200,
    "wires": []
  },
  {
    "id": "7fb83c933b17d5e7",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "filter_pressure2 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 250,
    "y": 160,
    "wires": []
  },
  {
    "id": "e03f38f75d002ee8",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"filter_pressure3\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 300,
    "wires": [
      [
        "2a5c36fbe5ccd852"
      ]
    ]
  },
  {
    "id": "2a5c36fbe5ccd852",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "filter_pressure3",
    "collection": "filter_pressure3",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 500,
    "y": 300,
    "wires": []
  },
  {
    "id": "566eeb53885683d0",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "filter_pressure3 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 250,
    "y": 260,
    "wires": []
  },
  {
    "id": "44921ae6224d29d1",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"oilTank_temp\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 400,
    "wires": [
      [
        "5af5e4dca2b1590e"
      ]
    ]
  },
  {
    "id": "5af5e4dca2b1590e",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "oilTank_temp",
    "collection": "oilTank_temp",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 490,
    "y": 400,
    "wires": []
  },
  {
    "id": "00de505b61c60d74",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "oilTank_temp 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 240,
    "y": 360,
    "wires": []
  },
  {
    "id": "35e58d40651c01c9",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 200,
    "wires": [
      [
        "277b8b35978965fe"
      ]
    ]
  },
  {
    "id": "03c894fd82594ca0",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 300,
    "wires": [
      [
        "e03f38f75d002ee8"
      ]
    ]
  },
  {
    "id": "f692a5c58210372d",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 400,
    "wires": [
      [
        "44921ae6224d29d1"
      ]
    ]
  },
  {
    "id": "1fd053c60283cf1b",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"air_cleaner\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 500,
    "wires": [
      [
        "20131f91cc78c0d6"
      ]
    ]
  },
  {
    "id": "20131f91cc78c0d6",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "air_cleaner",
    "collection": "air_cleaner",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 490,
    "y": 500,
    "wires": []
  },
  {
    "id": "5ad9b56b807180a4",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "air_cleaner 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 230,
    "y": 460,
    "wires": []
  },
  {
    "id": "ddb690aacad02897",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 500,
    "wires": [
      [
        "1fd053c60283cf1b"
      ]
    ]
  },
  {
    "id": "306a73e0e0460178",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"air_washer\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 600,
    "wires": [
      [
        "4dfb19475141b3be"
      ]
    ]
  },
  {
    "id": "4dfb19475141b3be",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "air_washer",
    "collection": "air_washer",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 490,
    "y": 600,
    "wires": []
  },
  {
    "id": "b7be0477b8b1c15f",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "air_washer 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 230,
    "y": 560,
    "wires": []
  },
  {
    "id": "2419fb1f6603f686",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 600,
    "wires": [
      [
        "306a73e0e0460178"
      ]
    ]
  },
  {
    "id": "ff101d9408631fbc",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"mono_block\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 700,
    "wires": [
      [
        "99eb872f6b648359"
      ]
    ]
  },
  {
    "id": "99eb872f6b648359",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "mono_block",
    "collection": "mono_block",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 490,
    "y": 700,
    "wires": []
  },
  {
    "id": "252ddf260821975d",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "mono_block 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 240,
    "y": 660,
    "wires": []
  },
  {
    "id": "d0cf2c8832ee0734",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 700,
    "wires": [
      [
        "ff101d9408631fbc"
      ]
    ]
  },
  {
    "id": "32167957b43a371c",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"vision_camera\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 800,
    "wires": [
      [
        "c2de04ba28bff368"
      ]
    ]
  },
  {
    "id": "c2de04ba28bff368",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "vision_camera",
    "collection": "vision_camera",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 500,
    "y": 800,
    "wires": []
  },
  {
    "id": "c155b8dff183eda4",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "vision_camera 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 250,
    "y": 760,
    "wires": []
  },
  {
    "id": "cf4241aeef874c53",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "d": true,
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 800,
    "wires": [
      [
        "32167957b43a371c"
      ]
    ]
  },
  {
    "id": "cdeb7d46df7dee15",
    "type": "function",
    "z": "34cbadba494cdf22",
    "name": "remove query",
    "func": "let remove_date = {};\nremove_date.collection = \"weight_checker\";\n\nreturn remove_date;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 900,
    "wires": [
      [
        "31a2d4376a5ff093"
      ]
    ]
  },
  {
    "id": "31a2d4376a5ff093",
    "type": "mongodb out",
    "z": "34cbadba494cdf22",
    "mongodb": "da28b1d93eba7f99",
    "name": "weight_checker",
    "collection": "weight_checker",
    "payonly": false,
    "upsert": false,
    "multi": false,
    "operation": "delete",
    "x": 500,
    "y": 900,
    "wires": []
  },
  {
    "id": "32bd48ba603bea72",
    "type": "comment",
    "z": "34cbadba494cdf22",
    "name": "weight_checker 컬렉션 데이터 삭제(매주 일요일 오전9시)",
    "info": "",
    "x": 250,
    "y": 860,
    "wires": []
  },
  {
    "id": "fb00845007e83a27",
    "type": "inject",
    "z": "34cbadba494cdf22",
    "d": true,
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "00 09 * * 0",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 900,
    "wires": [
      [
        "cdeb7d46df7dee15"
      ]
    ]
  }
]