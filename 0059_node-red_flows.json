[
  {
    "id": "680afc8e46551b31",
    "type": "tab",
    "label": "플로우 1",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "ddba9c0ddb75dcf8",
    "type": "tab",
    "label": "플로우 2",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "e932afc27a41611c",
    "type": "serial-port",
    "serialport": "COM9",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "waitfor": "",
    "dtr": "none",
    "rts": "none",
    "cts": "none",
    "dsr": "none",
    "newline": "200",
    "bin": "bin",
    "out": "time",
    "addchar": "",
    "responsetimeout": "10000"
  },
  {
    "id": "b0091eac42438820",
    "type": "modbus-client",
    "name": "",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.1.201",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "8e572f554e8c44d0",
    "type": "MySQLdatabase",
    "name": "fz_shm",
    "host": "127.0.0.1",
    "port": "3306",
    "db": "fz_shm",
    "tz": "",
    "charset": "UTF8"
  },
  {
    "id": "fe9b9df19a5e0673",
    "type": "function",
    "z": "680afc8e46551b31",
    "name": "function 1",
    "func": "msg.payload = Buffer.from([2, 48, 49, 82, 88, 84, 80, 48, 3, 62]);\nnode.send(msg);\n\nmsg.payload = Buffer.from([2, 48, 50, 82, 88, 84, 80, 48, 3, 61]);\nnode.send(msg);\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 260,
    "y": 100,
    "wires": [
      [
        "19ca8fcdd38f02ed"
      ]
    ]
  },
  {
    "id": "19ca8fcdd38f02ed",
    "type": "serial request",
    "z": "680afc8e46551b31",
    "name": "",
    "serial": "e932afc27a41611c",
    "x": 410,
    "y": 100,
    "wires": [
      [
        "fc730be6c302b6e1"
      ]
    ]
  },
  {
    "id": "fc730be6c302b6e1",
    "type": "buffer-parser",
    "z": "680afc8e46551b31",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "ascii",
        "name": "item1",
        "offset": 3,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      },
      {
        "type": "ascii",
        "name": "item2",
        "offset": 9,
        "length": 4,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 370,
    "y": 180,
    "wires": [
      [
        "092c8d398616d29a"
      ]
    ]
  },
  {
    "id": "092c8d398616d29a",
    "type": "function",
    "z": "680afc8e46551b31",
    "name": "function 2",
    "func": "msg.payload[1] = Buffer.from(msg.payload[1], \"hex\");\n\n// 현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar temp = msg.payload[1].readInt16BE(0);\nvar curTemp = parseFloat(temp) / 10;\n\n// 장치 국번\nvar unitid = parseInt(msg.payload[0]);\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nmsg.payload = {\n    \"ccode\": \"0059\",\n    \"kind\": \"4\",\n    \"deviceId\": unitid,\n    \"temperature\": curTemp,\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 540,
    "y": 180,
    "wires": [
      [
        "16a767cb183e5b2a",
        "f36deb8a4aec82da"
      ]
    ]
  },
  {
    "id": "16a767cb183e5b2a",
    "type": "http request",
    "z": "680afc8e46551b31",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "https://pc.smarthaccpman.com/smh-api/c0059/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 710,
    "y": 200,
    "wires": [
      [
        "885df2f1807c4e21"
      ]
    ]
  },
  {
    "id": "885df2f1807c4e21",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 1",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 860,
    "y": 200,
    "wires": []
  },
  {
    "id": "f36deb8a4aec82da",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 2",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 700,
    "y": 140,
    "wires": []
  },
  {
    "id": "92e60288431109d2",
    "type": "comment",
    "z": "680afc8e46551b31",
    "name": "냉장/냉동",
    "info": "",
    "x": 80,
    "y": 60,
    "wires": []
  },
  {
    "id": "84bfd607a8d4f65e",
    "type": "inject",
    "z": "680afc8e46551b31",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 100,
    "wires": [
      [
        "fe9b9df19a5e0673"
      ]
    ]
  },
  {
    "id": "5e83d3293a781bd8",
    "type": "comment",
    "z": "680afc8e46551b31",
    "name": "포장기_PLC",
    "info": "*PLC 정보\n -제조사 : LS산전\n -CPU 모델명 : \n -IP 주소 : 192.168.1.201\n -PORT : 502\n -워드 읽기 주소 : D6003\n -총 생산수량 주소 : D6003\n (총 생산수량은 더블워드로 처리하여 D6003 값이 32767이 넘어갈 때마다\n  D6003의 데이터는 0으로 초기화되고, D6004 값이 1씩 증가한다.)\n\n*데이터 수집 항목\n -포장 수량\n -선별 수량\n -가동시간\n -장비 I/O",
    "x": 90,
    "y": 280,
    "wires": []
  },
  {
    "id": "3857ebe0dd96a0cf",
    "type": "inject",
    "z": "680afc8e46551b31",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 320,
    "wires": [
      [
        "49eda1d179f06695",
        "1465f3d5c0a1c7e2"
      ]
    ]
  },
  {
    "id": "49eda1d179f06695",
    "type": "modbus-getter",
    "z": "680afc8e46551b31",
    "name": "포장기_PLC",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "0",
    "quantity": "5",
    "server": "b0091eac42438820",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 290,
    "y": 320,
    "wires": [
      [
        "3862ecd89282445a",
        "97d34afa2046df74"
      ],
      []
    ]
  },
  {
    "id": "3862ecd89282445a",
    "type": "function",
    "z": "680afc8e46551b31",
    "name": "parsing",
    "func": "let plc_data = msg.payload;    // PLC 데이터\nlet carry = plc_data[1];   // D6004_총생산수량 더블워드 D6003값이 65536이 넘어갈때마다 1씩 증가\nlet tot_cnt = plc_data[0] + (carry * 65536);  // D6003_총 생산수량 (D6003값이 65536이 넘어갈때마다 0으로 초기화됨)\nlet product_num = plc_data[2];  // D6005_품목Data (총60개 : 0~59)\n\n\nmsg.payload = {\n    \"품목 번호\": product_num,\n    \"총 포장횟수\": tot_cnt\n}\n\nmsg.topic = \"INSERT INTO fz_shm.packing (productNum, totalCount) VALUES ('\" + product_num + \"', '\" + tot_cnt + \"')\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 460,
    "y": 340,
    "wires": [
      [
        "80946a3b1a9768d3",
        "ce95ef61fd61e82e"
      ]
    ]
  },
  {
    "id": "80946a3b1a9768d3",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 4",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 620,
    "y": 280,
    "wires": []
  },
  {
    "id": "4f2401c20651dad1",
    "type": "http request",
    "z": "680afc8e46551b31",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0059/get_thermoforming",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 790,
    "y": 420,
    "wires": [
      [
        "b4f91a02cb36c07d"
      ]
    ]
  },
  {
    "id": "b4f91a02cb36c07d",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 5",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 940,
    "y": 420,
    "wires": []
  },
  {
    "id": "97d34afa2046df74",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 6",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 440,
    "y": 280,
    "wires": []
  },
  {
    "id": "ce95ef61fd61e82e",
    "type": "mysql",
    "z": "680afc8e46551b31",
    "mydb": "8e572f554e8c44d0",
    "name": "fz_shm",
    "x": 620,
    "y": 340,
    "wires": [
      [
        "b0bd4e57dab77e16"
      ]
    ]
  },
  {
    "id": "b0bd4e57dab77e16",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 7",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 780,
    "y": 340,
    "wires": []
  },
  {
    "id": "1465f3d5c0a1c7e2",
    "type": "function",
    "z": "680afc8e46551b31",
    "name": "SELECT Query",
    "func": "msg.topic = \"SELECT productNum, totalCount FROM fz_shm.packing WHERE (wdate BETWEEN date_add(now(), interval -15 second) AND now()) ORDER BY wdate DESC LIMIT 1\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 280,
    "y": 420,
    "wires": [
      [
        "3edf1f843a021eb5"
      ]
    ]
  },
  {
    "id": "3edf1f843a021eb5",
    "type": "mysql",
    "z": "680afc8e46551b31",
    "mydb": "8e572f554e8c44d0",
    "name": "",
    "x": 460,
    "y": 420,
    "wires": [
      [
        "fcc0b4bbe4a07c2f"
      ]
    ]
  },
  {
    "id": "fcc0b4bbe4a07c2f",
    "type": "function",
    "z": "680afc8e46551b31",
    "name": "send api",
    "func": "if (msg.payload != \"\") {\n    let db_model = msg.payload[0].productNum;  // 생산 모델 번호\n    let db_count = msg.payload[0].totalCount;  // 생산량\n\n\n    msg.headers = {};\n    msg.headers['content-type'] = \"application/json\";\n    msg.headers['Accept'] = \"application/json\";\n\n    msg.payload = {\n        \"ccode\": \"0059\",\n        \"m_gubun\": \"5\",\n        \"m_adr\": db_model,\n        \"tot_cnt\": db_count\n    };\n\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 620,
    "y": 420,
    "wires": [
      [
        "2ffeb827270a36b1",
        "4f2401c20651dad1"
      ]
    ]
  },
  {
    "id": "2ffeb827270a36b1",
    "type": "debug",
    "z": "680afc8e46551b31",
    "name": "debug 8",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 760,
    "y": 480,
    "wires": []
  },
  {
    "id": "24234d67e41dcab1",
    "type": "debug",
    "z": "ddba9c0ddb75dcf8",
    "name": "debug 3",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 480,
    "y": 260,
    "wires": []
  },
  {
    "id": "9c571a5fa991e2bb",
    "type": "http in",
    "z": "ddba9c0ddb75dcf8",
    "name": "",
    "url": "/getSignal",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 300,
    "y": 180,
    "wires": [
      [
        "c891bbad0a4f43e4",
        "24234d67e41dcab1"
      ]
    ]
  },
  {
    "id": "c891bbad0a4f43e4",
    "type": "http response",
    "z": "ddba9c0ddb75dcf8",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 470,
    "y": 200,
    "wires": []
  }
]