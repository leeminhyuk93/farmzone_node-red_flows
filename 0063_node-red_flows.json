[
  {
    "id": "71aaba71cce9c427",
    "type": "tab",
    "label": "Data Send",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "dacccb3c983e693c",
    "type": "tab",
    "label": "세척기",
    "disabled": false,
    "info": "1. 세척수 온도\r\n2. 행굼수 온도\r\n3. 모터 회전속도",
    "env": []
  },
  {
    "id": "6cfb4e61667234ed",
    "type": "tab",
    "label": "세척기_DB조회",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "50af027f8d596046",
    "type": "tab",
    "label": "Database delete",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "bb37ce8039ee6056",
    "type": "tab",
    "label": "Data Send(DTU 백업)",
    "disabled": true,
    "info": "",
    "env": []
  },
  {
    "id": "8e6679f805bb8a8b",
    "type": "tab",
    "label": "군자팜_참고용Data Send",
    "disabled": true,
    "info": "",
    "env": []
  },
  {
    "id": "ec287ee065fe247c",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM7",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "5904de5649bf46eb",
    "type": "MySQLdatabase",
    "name": "",
    "host": "127.0.0.1",
    "port": "3306",
    "db": "fz_shm",
    "tz": "",
    "charset": "UTF8"
  },
  {
    "id": "726a4c0df1af3a34",
    "type": "modbus-client",
    "name": "조도센서_1",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.0.151",
    "tcpPort": "1501",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 1,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "15ee3923fe9c3222",
    "type": "modbus-client",
    "name": "조도센서_2",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.0.152",
    "tcpPort": "1502",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 1,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "fcd11bc3c3265ff0",
    "type": "modbus-client",
    "name": "조도센서_3",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.0.153",
    "tcpPort": "1503",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "0",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "c0cd74c4421a7670",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM7",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 1,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "f144f55f16c3fd9f",
    "type": "MySQLdatabase",
    "name": "",
    "host": "127.0.0.1",
    "port": "3306",
    "db": "fz_shm",
    "tz": "",
    "charset": "UTF8"
  },
  {
    "id": "7e86d7e1e2453e8d",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM7",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "ec5b478e84d6384c",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM7",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "a054957047eb7e48",
    "type": "modbus-client",
    "name": "",
    "clienttype": "simpleser",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "127.0.0.1",
    "tcpPort": "502",
    "tcpType": "DEFAULT",
    "serialPort": "COM7",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "ced650132e8768a3",
    "type": "MySQLdatabase",
    "name": "",
    "host": "127.0.0.1",
    "port": "3306",
    "db": "fz_shm",
    "tz": "",
    "charset": "UTF8"
  },
  {
    "id": "665e361b0921d3b4",
    "type": "modbus-client",
    "name": "조도센서_1",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.0.151",
    "tcpPort": "1501",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 1,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "2d8ed90b67134bc5",
    "type": "modbus-client",
    "name": "조도센서_2",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.0.152",
    "tcpPort": "1502",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": "1",
    "commandDelay": "1",
    "clientTimeout": "1000",
    "reconnectOnTimeout": true,
    "reconnectTimeout": "2000",
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "9221faa7114a63e5",
    "type": "modbus-client",
    "name": "조도센서_3",
    "clienttype": "tcp",
    "bufferCommands": true,
    "stateLogEnabled": false,
    "queueLogEnabled": false,
    "failureLogEnabled": true,
    "tcpHost": "192.168.0.153",
    "tcpPort": "1503",
    "tcpType": "DEFAULT",
    "serialPort": "/dev/ttyUSB",
    "serialType": "RTU-BUFFERD",
    "serialBaudrate": "9600",
    "serialDatabits": "8",
    "serialStopbits": "1",
    "serialParity": "none",
    "serialConnectionDelay": "100",
    "serialAsciiResponseStartDelimiter": "0x3A",
    "unit_id": 1,
    "commandDelay": 1,
    "clientTimeout": 1000,
    "reconnectOnTimeout": true,
    "reconnectTimeout": 2000,
    "parallelUnitIdsAllowed": true,
    "showWarnings": true,
    "showLogs": true
  },
  {
    "id": "8b88fe9a19eda841",
    "type": "MySQLdatabase",
    "name": "",
    "host": "localhost",
    "port": "3306",
    "db": "fz_shm",
    "tz": "",
    "charset": "UTF8"
  },
  {
    "id": "9c2e069e46becdfc",
    "type": "ui_base",
    "theme": {
      "name": "theme-dark",
      "lightTheme": {
        "default": "#0094CE",
        "baseColor": "#0094CE",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": true,
        "reset": false
      },
      "darkTheme": {
        "default": "#097479",
        "baseColor": "#097479",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": true,
        "reset": false
      },
      "customTheme": {
        "name": "Untitled Theme 1",
        "default": "#4B7930",
        "baseColor": "#4B7930",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "reset": false
      },
      "themeState": {
        "base-color": {
          "default": "#097479",
          "value": "#097479",
          "edited": false
        },
        "page-titlebar-backgroundColor": {
          "value": "#097479",
          "edited": false
        },
        "page-backgroundColor": {
          "value": "#111111",
          "edited": false
        },
        "page-sidebar-backgroundColor": {
          "value": "#333333",
          "edited": false
        },
        "group-textColor": {
          "value": "#0eb8c0",
          "edited": false
        },
        "group-borderColor": {
          "value": "#555555",
          "edited": false
        },
        "group-backgroundColor": {
          "value": "#333333",
          "edited": false
        },
        "widget-textColor": {
          "value": "#eeeeee",
          "edited": false
        },
        "widget-backgroundColor": {
          "value": "#097479",
          "edited": false
        },
        "widget-borderColor": {
          "value": "#333333",
          "edited": false
        },
        "base-font": {
          "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
        }
      },
      "angularTheme": {
        "primary": "indigo",
        "accents": "blue",
        "warn": "red",
        "background": "grey",
        "palette": "light"
      }
    },
    "site": {
      "name": "Node-RED Dashboard",
      "hideToolbar": "false",
      "allowSwipe": "false",
      "lockMenu": "false",
      "allowTempTheme": "true",
      "dateFormat": "DD/MM/YYYY",
      "sizes": {
        "sx": 48,
        "sy": 48,
        "gx": 6,
        "gy": 6,
        "cx": 6,
        "cy": 6,
        "px": 0,
        "py": 0
      }
    }
  },
  {
    "id": "9862036d7a4f400d",
    "type": "ui_tab",
    "name": "세척기 모니터링 시스템",
    "icon": "dashboard",
    "order": 1,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "b1bdee389aeb605c",
    "type": "ui_tab",
    "name": "모터RPM설정",
    "icon": "dashboard",
    "order": 2,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "781800f3c2896560",
    "type": "ui_tab",
    "name": "MySQL Table",
    "icon": "dashboard",
    "order": 3,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "938673c4a764e916",
    "type": "ui_group",
    "name": "Temp Monitor",
    "tab": "9862036d7a4f400d",
    "order": 1,
    "disp": true,
    "width": "7",
    "collapse": false,
    "className": "round"
  },
  {
    "id": "80424e03a4e68f78",
    "type": "ui_group",
    "name": "Inverter Monitor",
    "tab": "9862036d7a4f400d",
    "order": 2,
    "disp": true,
    "width": "7",
    "collapse": false,
    "className": ""
  },
  {
    "id": "3bc6e2e6badb9d1e",
    "type": "ui_group",
    "name": "모터정격RPM",
    "tab": "b1bdee389aeb605c",
    "order": 1,
    "disp": true,
    "width": "7",
    "collapse": false,
    "className": ""
  },
  {
    "id": "7077a3222aa2fa2f",
    "type": "ui_group",
    "name": "센서 동작 상황 DB REPORT",
    "tab": "781800f3c2896560",
    "order": 1,
    "disp": true,
    "width": "14",
    "collapse": false,
    "className": ""
  },
  {
    "id": "6ad797f821bcbaf1",
    "type": "ui_spacer",
    "z": "6cfb4e61667234ed",
    "name": "spacer",
    "group": "7077a3222aa2fa2f",
    "order": 4,
    "width": 4,
    "height": 1
  },
  {
    "id": "03877c306bf843ed",
    "type": "serial-port",
    "name": "",
    "serialport": "COM3",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "waitfor": "",
    "dtr": "none",
    "rts": "none",
    "cts": "none",
    "dsr": "none",
    "newline": "500",
    "bin": "bin",
    "out": "time",
    "addchar": "",
    "responsetimeout": "2000"
  },
  {
    "id": "429abb13b5f03807",
    "type": "ui_spacer",
    "z": "dacccb3c983e693c",
    "name": "spacer",
    "group": "830c13e47ed0ee52",
    "order": 3,
    "width": 1,
    "height": 1
  },
  {
    "id": "b2f4f801fbf8514c",
    "type": "ui_spacer",
    "z": "dacccb3c983e693c",
    "name": "spacer",
    "group": "830c13e47ed0ee52",
    "order": 4,
    "width": 1,
    "height": 1
  },
  {
    "id": "a4e408c03b2c2e8f",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "Loop 1 Minute",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "60",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 100,
    "wires": [
      [
        "561e697e95310621"
      ]
    ]
  },
  {
    "id": "c4416050754c797f",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "XR10 (1~2)",
    "info": "",
    "x": 90,
    "y": 60,
    "wires": []
  },
  {
    "id": "ad6c02ae8accaff0",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 230,
    "y": 200,
    "wires": [
      [
        "1e1b538f43576b10"
      ]
    ]
  },
  {
    "id": "55daa5d40673ad8b",
    "type": "delay",
    "z": "71aaba71cce9c427",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 230,
    "y": 160,
    "wires": [
      [
        "3b33d78e8ce57481",
        "1e1b538f43576b10"
      ]
    ]
  },
  {
    "id": "730b815e66188856",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug for TCs",
    "active": true,
    "tosidebar": false,
    "console": false,
    "tostatus": true,
    "complete": "true",
    "targetType": "full",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 800,
    "y": 280,
    "wires": []
  },
  {
    "id": "54c9f93776a09746",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 610,
    "y": 280,
    "wires": [
      [
        "730b815e66188856"
      ]
    ]
  },
  {
    "id": "bf96f88cdf4fcf67",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "//현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar curTemp = parseFloat(msg.payload) / 10;\n\n//장치 국번\nvar unitid = msg.unitId;\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"kind\": \"4\",\n    \"deviceId\": unitid,\n    \"temperature\": curTemp,\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 240,
    "wires": [
      [
        "54c9f93776a09746",
        "bc082abcc8fc210c"
      ]
    ]
  },
  {
    "id": "bc082abcc8fc210c",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug for TCs",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 620,
    "y": 220,
    "wires": []
  },
  {
    "id": "561e697e95310621",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "1",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "ec287ee065fe247c",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 160,
    "wires": [
      [
        "55daa5d40673ad8b"
      ],
      []
    ]
  },
  {
    "id": "3b33d78e8ce57481",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "2",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "ec287ee065fe247c",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 200,
    "wires": [
      [
        "ad6c02ae8accaff0"
      ],
      []
    ]
  },
  {
    "id": "1e1b538f43576b10",
    "type": "buffer-parser",
    "z": "71aaba71cce9c427",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 430,
    "y": 180,
    "wires": [
      [
        "bf96f88cdf4fcf67"
      ]
    ]
  },
  {
    "id": "ac59dfb48a32729f",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "d": true,
    "name": "10초",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 920,
    "wires": [
      [
        "761afa3123142970"
      ]
    ]
  },
  {
    "id": "761afa3123142970",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "select query",
    "func": "msg.topic = \"SELECT * FROM fztable WHERE (date BETWEEN date_add(now(), interval -10 second) AND now()) ORDER BY date DESC LIMIT 1\";\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 250,
    "y": 920,
    "wires": [
      [
        "ca0ae599a19aa5ba"
      ]
    ]
  },
  {
    "id": "ca0ae599a19aa5ba",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 420,
    "y": 920,
    "wires": [
      [
        "c3c495ddd1578233"
      ]
    ]
  },
  {
    "id": "b219b0224c310a2e",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "세척기(라즈베리파이)",
    "info": "",
    "x": 120,
    "y": 880,
    "wires": []
  },
  {
    "id": "c3c495ddd1578233",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "//현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar current_value = msg.payload;\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nif (current_value == \"\") {  //세척기에서 받아오는 값이 없을 경우\n    msg.payload = {\n        \"ccode\": \"0063\",\n        \"scode\": \"91\",\n        \"temp1\": \"\",\n        \"temp2\": \"\",\n        \"rpm\": \"\"\n    };\n\n    return msg;\n\n} else {    //세척기에서 실제 값을 받아올 경우\n\n    var temp1 = current_value[0].temp1;\n    var temp2 = current_value[0].temp2;\n    var rpm = current_value[0].RPM;\n    var date = current_value[0].date;\n    \n    msg.payload = {\n        \"ccode\": \"0063\",\n        \"scode\": \"91\",\n        \"temp1\": temp1,\n        \"temp2\": temp2,\n        \"rpm\": rpm\n    };\n\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 580,
    "y": 920,
    "wires": [
      [
        "9fe0085f6834419d",
        "07245c37bc633a61"
      ]
    ]
  },
  {
    "id": "9fe0085f6834419d",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_cleanser2",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 750,
    "y": 940,
    "wires": [
      [
        "abc91bf6ef1f0b88"
      ]
    ]
  },
  {
    "id": "abc91bf6ef1f0b88",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 2",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 900,
    "y": 940,
    "wires": []
  },
  {
    "id": "07245c37bc633a61",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 3",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 740,
    "y": 900,
    "wires": []
  },
  {
    "id": "9f6597207b6f8faf",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "조도센서_1",
    "info": "장치 : BCON-TRM200\n수집 데이터 : 온도, 습도, CO2, 조도\n\n*Function Code\n - Func 3, 4\n\n2) address\n0 : 센서에러 (1:센서에러, 0:에러아님)\n1 : CO2센서값 (0 ~ 5000ppm)\n2 : 온도센서값 (-20.0 ~ 65.0℃)\n3 : 습도센서값 (0 ~ 100.0%Rh)\n4 : 조도센서값 (0 ~ 54600 Lux)",
    "x": 90,
    "y": 380,
    "wires": []
  },
  {
    "id": "fa7d5987c215d4ce",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 420,
    "wires": [
      [
        "e30c7960b8752476"
      ]
    ]
  },
  {
    "id": "a1297ec49a119065",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 580,
    "y": 460,
    "wires": [
      []
    ]
  },
  {
    "id": "06929db1a31d27ce",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 4",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 380,
    "wires": []
  },
  {
    "id": "84bd3187168d9588",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 590,
    "y": 420,
    "wires": [
      [
        "8ec62db0f60c914f"
      ]
    ]
  },
  {
    "id": "8ec62db0f60c914f",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 5",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 740,
    "y": 420,
    "wires": []
  },
  {
    "id": "4f5e4f46a38b9d12",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "조도센서_2",
    "info": "장치 : BCON-TRM200\n수집 데이터 : 온도, 습도, CO2, 조���\n\n*Function Code\n - Func 3, 4\n\n2) address\n0 : 센서에러 (1:센서에러, 0:에러아님)\n1 : CO2센서값 (0 ~ 5000ppm)\n2 : 온도센서값 (-20.0 ~ 65.0℃)\n3 : 습도센서값 (0 ~ 100.0%Rh)\n4 : 조도센서값 (0 ~ 54600 Lux)",
    "x": 90,
    "y": 560,
    "wires": []
  },
  {
    "id": "465f433ab75faba7",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 600,
    "wires": [
      [
        "d075ed1f068673ea"
      ]
    ]
  },
  {
    "id": "b127793aceb10ca9",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 580,
    "y": 640,
    "wires": [
      []
    ]
  },
  {
    "id": "b1cab0e96ee354eb",
    "type": "comment",
    "z": "71aaba71cce9c427",
    "name": "조도센서_3",
    "info": "장치 : 스테인레스 스틸 광 센서(XIN NUO QI)\n수집 데이터 : 조도\n\n*Function Code\n - Func 3\n\n2) address\n0 : 조도센서값 (0 ~ 65535 Lux)",
    "x": 90,
    "y": 740,
    "wires": []
  },
  {
    "id": "76ec67f6cfd9b6d5",
    "type": "inject",
    "z": "71aaba71cce9c427",
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 780,
    "wires": [
      [
        "ad00e6d6c3da0eb7"
      ]
    ]
  },
  {
    "id": "5418079dcdddd7e6",
    "type": "mysql",
    "z": "71aaba71cce9c427",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 580,
    "y": 820,
    "wires": [
      []
    ]
  },
  {
    "id": "e7731d7333719f5e",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 6",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 560,
    "wires": []
  },
  {
    "id": "b604061f245732a0",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 590,
    "y": 600,
    "wires": [
      [
        "11417dbfde6c0a63"
      ]
    ]
  },
  {
    "id": "11417dbfde6c0a63",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 7",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 740,
    "y": 600,
    "wires": []
  },
  {
    "id": "3ae53a7ceeb8cb6c",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 8",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 740,
    "wires": []
  },
  {
    "id": "73579baa557c8793",
    "type": "http request",
    "z": "71aaba71cce9c427",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_lux",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 590,
    "y": 780,
    "wires": [
      [
        "fa153750a1834f46"
      ]
    ]
  },
  {
    "id": "fa153750a1834f46",
    "type": "debug",
    "z": "71aaba71cce9c427",
    "name": "debug 9",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 740,
    "y": 780,
    "wires": []
  },
  {
    "id": "e30c7960b8752476",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "smg5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "HoldingRegister",
    "adr": "0",
    "quantity": "5",
    "server": "726a4c0df1af3a34",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 240,
    "y": 420,
    "wires": [
      [
        "cecdf9d7dff6bac5"
      ],
      []
    ]
  },
  {
    "id": "cecdf9d7dff6bac5",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "let sensor_error = msg.payload[0];   // [1:센서에러, 0:에러아님]\nlet co2 = msg.payload[1];            // 이산화탄소\nlet temp = msg.payload[2];           // 온도\nlet humid = msg.payload[3];          // 습도\nlet lux = msg.payload[4];            // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"scode\": \"73\",\n    \"kind\": \"5\",\n    \"deviceId\": \"3\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\nmsg.topic = \"INSERT INTO fz_shm.smg1 (co2, temp, humid, lux) VALUES (\" + co2 + \", \" + temp + \", \" + humid + \", \" + lux + \")\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 420,
    "wires": [
      [
        "06929db1a31d27ce",
        "84bd3187168d9588",
        "a1297ec49a119065"
      ]
    ]
  },
  {
    "id": "d075ed1f068673ea",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "smg5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "HoldingRegister",
    "adr": "0",
    "quantity": "5",
    "server": "15ee3923fe9c3222",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 240,
    "y": 600,
    "wires": [
      [
        "c59df3e61622a28e"
      ],
      []
    ]
  },
  {
    "id": "c59df3e61622a28e",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "let sensor_error = msg.payload[0];   // [1:센서에러, 0:에러아님]\nlet co2 = msg.payload[1];            // 이산화탄소\nlet temp = msg.payload[2];           // 온도\nlet humid = msg.payload[3];          // 습도\nlet lux = msg.payload[4];            // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"scode\": \"74\",\n    \"kind\": \"5\",\n    \"deviceId\": \"4\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\nmsg.topic = \"INSERT INTO fz_shm.smg2 (co2, temp, humid, lux) VALUES (\" + co2 + \", \" + temp + \", \" + humid + \", \" + lux + \")\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 600,
    "wires": [
      [
        "e7731d7333719f5e",
        "b604061f245732a0",
        "b127793aceb10ca9"
      ]
    ]
  },
  {
    "id": "bfb3fcc62f594531",
    "type": "function",
    "z": "71aaba71cce9c427",
    "name": "send api",
    "func": "let lux = msg.payload[0];   // 조도\nlux = lux * 0.13;           // 조도 데이터 가공\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"scode\": \"75\",\n    \"kind\": \"5\",\n    \"deviceId\": \"5\",\n    \"co2\": '',\n    \"temperature\": '',\n    \"humidity\": '',\n    \"lux\": lux\n};\n\nmsg.topic = \"INSERT INTO fz_shm.smg3 (lux) VALUES (\" + lux + \")\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 780,
    "wires": [
      [
        "3ae53a7ceeb8cb6c",
        "73579baa557c8793",
        "5418079dcdddd7e6"
      ]
    ]
  },
  {
    "id": "ad00e6d6c3da0eb7",
    "type": "modbus-getter",
    "z": "71aaba71cce9c427",
    "name": "smg5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "HoldingRegister",
    "adr": "0",
    "quantity": "1",
    "server": "9221faa7114a63e5",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 240,
    "y": 780,
    "wires": [
      [
        "bfb3fcc62f594531"
      ],
      []
    ]
  },
  {
    "id": "d26ecbc310c5e946",
    "type": "comment",
    "z": "dacccb3c983e693c",
    "name": "덕연_세척기 데이터 수집",
    "info": "1) 국번1 : 세척수 온도\n - 제조사 : 코노텍\n - 모델명 : TP10\n - 통신프로토콜 : Modbus\n\n2) 국번2 : 헹굼수 온도\n - 제조사 : 코노텍\n - 모델명 : TP10\n - 통신프로토콜 : Modbus\n\n3) 국번3 : 모터회전속도(브러쉬속도)\n - 제조사 : MK electronics\n - 모델명 : DF-132A54\n - 통신프로토콜 : Mk사용자 정의 프로토콜",
    "x": 130,
    "y": 40,
    "wires": []
  },
  {
    "id": "db6d1655a84e3e44",
    "type": "inject",
    "z": "dacccb3c983e693c",
    "d": true,
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "5",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 100,
    "wires": [
      [
        "978c30b142514ea7"
      ]
    ]
  },
  {
    "id": "978c30b142514ea7",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "Modbus query",
    "func": "async function delay(timeMs) {\n    await new Promise(resolve => setTimeout(resolve, timeMs));\n}\n\nvar hexValues = [\"0x01\", \"0x04\", \"0x00\", \"0x64\", \"0x00\", \"0x01\", \"0x70\", \"0x15\"];\nmsg.payload = Buffer.from(hexValues.map(hex => parseInt(hex, 16)));\n// msg.topic = 1;\nnode.send(msg);\n\nawait delay(1000);\n\nvar hexValues = [\"0x02\", \"0x04\", \"0x00\", \"0x64\", \"0x00\", \"0x01\", \"0x70\", \"0x26\"];\nmsg.payload = Buffer.from(hexValues.map(hex => parseInt(hex, 16)));\n// msg.topic = 1;\nnode.send(msg);\n\n// await delay(1000);\n\n// var hexValues = [\"0x02\", \"0x08\", \"0x03\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0xED\", \"0x0D\", \"0x0A\", \"0x03\"];\n// msg.payload = Buffer.from(hexValues.map(hex => parseInt(hex, 16)));\n\n// msg.payload = Buffer.from([0x02, 0x08, 0x03, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xED, 0x0D, 0x0A, 0x03]);\n// msg.topic = 2;\n// node.send(msg);\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 300,
    "y": 100,
    "wires": [
      [
        "b9fc51a1bd885c57"
      ]
    ]
  },
  {
    "id": "5095ad805b4edb87",
    "type": "buffer-parser",
    "z": "dacccb3c983e693c",
    "name": "Modbus buffer parser",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "hex",
        "name": "주소",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      },
      {
        "type": "hex",
        "name": "온도",
        "offset": 3,
        "length": 2,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 680,
    "y": 100,
    "wires": [
      [
        "3aae5127cb0d192b"
      ]
    ]
  },
  {
    "id": "3aae5127cb0d192b",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "Modbus parsing",
    "func": "// 주소 hex를 int로 변환 \nlet device_id = parseInt(msg.payload[0]);\n// 온도 hex를 int -> flaot로 변환 후 10을 나눔 \nlet temperature = parseInt(msg.payload[1], 16);\ntemperature = parseFloat(temperature) / 10;\ntemperature = temperature.toFixed(1);\n\nif (device_id == 1) {\n    msg.payload = [device_id, temperature];\n} else if (device_id == 2) {\n    msg.payload = [device_id, temperature];\n}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 900,
    "y": 100,
    "wires": [
      [
        "23af1c3fa0900fe3"
      ]
    ]
  },
  {
    "id": "7f951db02ede92a0",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 439",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1310,
    "y": 160,
    "wires": []
  },
  {
    "id": "79b420ad58d2ee53",
    "type": "delay",
    "z": "dacccb3c983e693c",
    "name": "",
    "pauseType": "delay",
    "timeout": "500",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 130,
    "y": 160,
    "wires": [
      [
        "03f8902a6123fc79"
      ]
    ]
  },
  {
    "id": "03f8902a6123fc79",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "MK query",
    "func": "// 디지털 회전계(인버터 RPM) 센서 장치 요청 프로토콜\n\n// Modbus 방식 : 국번, 펑션코드, 시작주소(상위), 시작주소(하위), 데이터 개수(상위), 데이터 개수(하위), CRC16(하위), CRC16(상위)\n//msg.payload = Buffer.from([0x01, 0x03, 0x00, 0x00, 0x00, 0x01, 0x84, 0x0A]);\n\n// MK 통신프로토콜 방식 : 헤더, CODE, ID, DOT와 부호를 포함한 7Byte의 ASCII, CHECK SUM,   제어코드\n//                       STX,   8,   1,    SP, SP, SP, SP, SP, SP, SP,       EB,     CR, LF, ETX\n//                       STX,   8,   2,    SP, SP, SP, SP, SP, SP, SP,       EC,     CR, LF, ETX\n//                       STX,   8,   3,    SP, SP, SP, SP, SP, SP, SP,       ED,     CR, LF, ETX\n\n// msg.payload = Buffer.from([0x02, 0x08, 0x03, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xED, 0x0D, 0x0A, 0x03]);\nvar hexValues = [\"0x02\", \"0x08\", \"0x03\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0x20\", \"0xED\", \"0x0D\", \"0x0A\", \"0x03\"];\nmsg.payload = Buffer.from(hexValues.map(hex => parseInt(hex, 16)));\nnode.send(msg);\n// return msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 280,
    "y": 160,
    "wires": [
      [
        "b9a9a2f5d2db81e7"
      ]
    ]
  },
  {
    "id": "c99231eec520c95c",
    "type": "buffer-parser",
    "z": "dacccb3c983e693c",
    "name": "MK 방식",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "hex",
        "name": "국번",
        "offset": 2,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      },
      {
        "type": "ascii",
        "name": "HZ",
        "offset": 6,
        "length": 4,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": true,
    "setTopic": true,
    "outputs": 1,
    "x": 760,
    "y": 160,
    "wires": [
      [
        "e526b92e01cdfba6"
      ]
    ]
  },
  {
    "id": "e526b92e01cdfba6",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "MK parsing",
    "func": "let device_id = parseInt(msg.payload[0]);\nlet hz = parseFloat(msg.payload[1]);\n\nmsg.payload = [device_id, hz];\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 930,
    "y": 160,
    "wires": [
      [
        "23af1c3fa0900fe3"
      ]
    ]
  },
  {
    "id": "814643cf705a886d",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "no undefined",
    "func": "// MK 데이터가 첫번째값은 무조건 undefined를 출력하기때문에\n// 정상적인 값을 받을때만 전달\n\nlet mk_data = msg.payload;\n\nif (mk_data != undefined) {\n\n    msg.payload = mk_data;\n    return msg;\n}\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 590,
    "y": 160,
    "wires": [
      [
        "c99231eec520c95c"
      ]
    ]
  },
  {
    "id": "23af1c3fa0900fe3",
    "type": "join",
    "z": "dacccb3c983e693c",
    "name": "",
    "mode": "custom",
    "build": "array",
    "property": "payload",
    "propertyType": "msg",
    "key": "topic",
    "joiner": "\\n",
    "joinerType": "str",
    "accumulate": false,
    "timeout": "",
    "count": "3",
    "reduceRight": false,
    "reduceExp": "",
    "reduceInit": "",
    "reduceInitType": "",
    "reduceFixup": "",
    "x": 1090,
    "y": 120,
    "wires": [
      [
        "f370689d2834ce50"
      ]
    ]
  },
  {
    "id": "f370689d2834ce50",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "DB Insert",
    "func": "var device1_temp = \"\";      // 세척수 온도\nvar device2_temp = \"\";      // 헹굼수 온도\nvar device3_hz = 0;        // Hz\nvar device3_rpm = 0;       // RPM\n\nfor (let i = 0; i < 3; i++) {\n    const device = msg.payload[i][0];\n    const value = msg.payload[i][1];\n\n    switch (device) {\n        case 1:\n            device1_temp = value;\n            break;\n\n        case 2:\n            device2_temp = value;\n            break;\n\n        case 3:\n            device3_hz = value;\n            let setrpm = flow.get('setrpm') || 170;\n            device3_rpm = Math.floor((setrpm * device3_hz) / 60);\n            break;\n    }\n}\n\nmsg.payload = {\n    \"device1_temp\": device1_temp,     // 세척수 온도\n    \"device2_temp\": device2_temp,     // 헹굼수 온도\n    \"device3_hz\": device3_hz,         // Hz\n    \"device3_rpm\": device3_rpm        // RPM\n}\n\nmsg.topic = \"insert into fz_shm.fztable (temp1, temp2, Hz, RPM, date) values('\" + device1_temp + \"', '\" + device2_temp + \"', '\" + device3_hz + \"', '\" + device3_rpm + \"', current_timestamp());\";\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1140,
    "y": 200,
    "wires": [
      [
        "7f951db02ede92a0",
        "21a095e052edabc3",
        "a9c374edf784b0c2"
      ]
    ]
  },
  {
    "id": "21a095e052edabc3",
    "type": "mysql",
    "z": "dacccb3c983e693c",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 1300,
    "y": 200,
    "wires": [
      [
        "474030ad0e1b5878"
      ]
    ]
  },
  {
    "id": "474030ad0e1b5878",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 442",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 1470,
    "y": 200,
    "wires": []
  },
  {
    "id": "f6d8436b526e3641",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "세척수 온도",
    "func": "let device1_temp = msg.payload['device1_temp'];\n\nmsg.payload = device1_temp;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 270,
    "y": 340,
    "wires": [
      [
        "e1e2a084bd47f80f",
        "1db41c09c3baa541",
        "9226cca3e609bd72"
      ]
    ]
  },
  {
    "id": "e1e2a084bd47f80f",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 443",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 450,
    "y": 300,
    "wires": []
  },
  {
    "id": "fde9195247fb1e8d",
    "type": "comment",
    "z": "dacccb3c983e693c",
    "name": "모니터링 대시보드",
    "info": "",
    "x": 110,
    "y": 280,
    "wires": []
  },
  {
    "id": "a9c374edf784b0c2",
    "type": "link out",
    "z": "dacccb3c983e693c",
    "name": "monitoring_in",
    "mode": "link",
    "links": [
      "b059087ad7cd88a0"
    ],
    "x": 1255,
    "y": 260,
    "wires": []
  },
  {
    "id": "b059087ad7cd88a0",
    "type": "link in",
    "z": "dacccb3c983e693c",
    "name": "monitoring_out",
    "links": [
      "a9c374edf784b0c2"
    ],
    "x": 85,
    "y": 460,
    "wires": [
      [
        "f6d8436b526e3641",
        "5c6b6b7ce2ff2a33",
        "83b6f8d34632bb50",
        "e9d8eb31873a9113"
      ]
    ]
  },
  {
    "id": "5c6b6b7ce2ff2a33",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "헹굼수 온도",
    "func": "let device2_temp = msg.payload['device2_temp'];\n\nmsg.payload = device2_temp;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 270,
    "y": 480,
    "wires": [
      [
        "8333fe9a8f44e97c",
        "1b8b576e3b316c6a",
        "d6bb8d75808b864c"
      ]
    ]
  },
  {
    "id": "8333fe9a8f44e97c",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 444",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 450,
    "y": 440,
    "wires": []
  },
  {
    "id": "83b6f8d34632bb50",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "Hz",
    "func": "let device3_hz = msg.payload['device3_hz'];\n\nmsg.payload = device3_hz;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 270,
    "y": 580,
    "wires": [
      [
        "ee8066e54550f3a1"
      ]
    ]
  },
  {
    "id": "ee8066e54550f3a1",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 445",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 430,
    "y": 580,
    "wires": []
  },
  {
    "id": "cbb02f34bf668b45",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 446",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 410,
    "y": 660,
    "wires": []
  },
  {
    "id": "e9d8eb31873a9113",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "RPM",
    "func": "let device3_rpm = msg.payload['device3_rpm'];\n\nmsg.payload = device3_rpm;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 250,
    "y": 700,
    "wires": [
      [
        "cbb02f34bf668b45",
        "f966248a04ae1dce",
        "f61895bc69ff24f8"
      ]
    ]
  },
  {
    "id": "1b8b576e3b316c6a",
    "type": "ui_gauge",
    "z": "dacccb3c983e693c",
    "name": "",
    "group": "938673c4a764e916",
    "order": 3,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "헹굼수 온도",
    "label": "℃",
    "format": "{{value}}",
    "min": "-15",
    "max": "100",
    "colors": [
      "#00b500",
      "#e6e600",
      "#ca3838"
    ],
    "seg1": "30",
    "seg2": "60",
    "diff": false,
    "className": "",
    "x": 450,
    "y": 480,
    "wires": []
  },
  {
    "id": "f966248a04ae1dce",
    "type": "ui_gauge",
    "z": "dacccb3c983e693c",
    "name": "",
    "group": "80424e03a4e68f78",
    "order": 2,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "모터 회전속도",
    "label": "RPM",
    "format": "{{value}}",
    "min": "0",
    "max": "200",
    "colors": [
      "#00b500",
      "#e6e600",
      "#ca3838"
    ],
    "seg1": "120",
    "seg2": "170",
    "diff": false,
    "className": "",
    "x": 420,
    "y": 700,
    "wires": []
  },
  {
    "id": "e25cecd8e91998b3",
    "type": "ui_template",
    "z": "dacccb3c983e693c",
    "group": "3bc6e2e6badb9d1e",
    "name": "RPM키패드",
    "order": 6,
    "width": 0,
    "height": 0,
    "format": "<style>\n    .num-button {\n        flex: 1 1 0px;\n        margin: 20px;\n        font-size: 18px;\n    }\n\n    .num-row {\n        display: flex;\n    }\n\n    .num-cell {\n        flex: 1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .display-window {\n        background-color: #eee;\n        padding: 10px;\n        margin: 5px auto;\n        text-align: right;\n        font-size: 18px;\n        color: black;\n        border: 1px solid #ccc;\n        width: 340px;\n        /* This line sets the width */\n        height: 20px;\n        /* This line sets the height */\n    }\n</style>\n\n<div>\n    <div class=\"display-window\">{{value}} RPM</div>\n    <div ng-repeat=\"row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\" class=\"num-row\">\n        <div ng-repeat=\"n in row\" class=\"num-cell\">\n            <md-button class=\"num-button\" ng-click=\"addNumber(n)\">{{n}}</md-button>\n        </div>\n    </div>\n    <div class=\"num-row\">\n        <div class=\"num-cell\">\n            <md-button class=\"num-button\" ng-click=\"clear()\">Clear</md-button>\n        </div>\n        <div class=\"num-cell\">\n            <md-button class=\"num-button\" ng-click=\"addNumber(0)\">0</md-button>\n        </div>\n        <div class=\"num-cell\">\n            <md-button class=\"num-button\" ng-click=\"sendPayload()\">Submit</md-button>\n        </div>\n    </div>\n</div>\n\n<script>\n    (function(scope) {\n    scope.value = \"\";\n    scope.addNumber = function(n) {\n      scope.value += n.toString();\n    };\n    scope.clear = function() {\n      scope.value = \"\";\n    };\n    scope.sendPayload = function() {\n      if (scope.value !== \"\") {\n        scope.send({payload: parseInt(scope.value)}); // Parse string to integer\n        // Don't clear the value after sending payload\n      }\n    };\n  })(scope);\n</script>",
    "storeOutMessages": true,
    "fwdInMessages": true,
    "resendOnRefresh": true,
    "templateScope": "local",
    "className": "",
    "x": 730,
    "y": 360,
    "wires": [
      [
        "ce2d4488fb2a588a"
      ]
    ]
  },
  {
    "id": "ce2d4488fb2a588a",
    "type": "function",
    "z": "dacccb3c983e693c",
    "name": "SETRPM 저장",
    "func": "var setrpm = msg.payload;\nif (setrpm > 1800) {\n    setrpm = 1800;\n}\nflow.set([\"setrpm\"], setrpm);\nmsg.payload = setrpm;\nreturn msg;\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 920,
    "y": 360,
    "wires": [
      [
        "ff53cf7c5e9e6315",
        "fa3f1a597ef41eaf"
      ]
    ]
  },
  {
    "id": "ff53cf7c5e9e6315",
    "type": "debug",
    "z": "dacccb3c983e693c",
    "name": "debug 447",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1110,
    "y": 340,
    "wires": []
  },
  {
    "id": "c6c9ef7b8362f09c",
    "type": "comment",
    "z": "dacccb3c983e693c",
    "name": "RPM 계산",
    "info": "",
    "x": 720,
    "y": 320,
    "wires": []
  },
  {
    "id": "fa3f1a597ef41eaf",
    "type": "ui_text",
    "z": "dacccb3c983e693c",
    "group": "3bc6e2e6badb9d1e",
    "order": 2,
    "width": 6,
    "height": 2,
    "name": "현재설정 RPM",
    "label": "현재설정 RPM",
    "format": "{{msg.payload}}RPM",
    "layout": "row-spread",
    "className": "",
    "style": false,
    "font": "",
    "fontSize": "",
    "color": "#000000",
    "x": 1120,
    "y": 380,
    "wires": []
  },
  {
    "id": "1db41c09c3baa541",
    "type": "ui_gauge",
    "z": "dacccb3c983e693c",
    "name": "",
    "group": "938673c4a764e916",
    "order": 1,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "세척수 온도",
    "label": "℃",
    "format": "{{value}}",
    "min": "-50",
    "max": "100",
    "colors": [
      "#00b500",
      "#e6e600",
      "#ca3838"
    ],
    "seg1": "30",
    "seg2": "60",
    "diff": false,
    "className": "",
    "x": 450,
    "y": 340,
    "wires": []
  },
  {
    "id": "b9fc51a1bd885c57",
    "type": "serial request",
    "z": "dacccb3c983e693c",
    "d": true,
    "name": "",
    "serial": "03877c306bf843ed",
    "x": 470,
    "y": 100,
    "wires": [
      [
        "5095ad805b4edb87",
        "79b420ad58d2ee53"
      ]
    ]
  },
  {
    "id": "b9a9a2f5d2db81e7",
    "type": "serial request",
    "z": "dacccb3c983e693c",
    "d": true,
    "name": "",
    "serial": "03877c306bf843ed",
    "x": 430,
    "y": 160,
    "wires": [
      [
        "814643cf705a886d"
      ]
    ]
  },
  {
    "id": "9226cca3e609bd72",
    "type": "ui_valuetrail",
    "z": "dacccb3c983e693c",
    "group": "938673c4a764e916",
    "order": 2,
    "width": 0,
    "height": 0,
    "name": "세척수 온도 그래프",
    "label": "",
    "unit": "",
    "blur": true,
    "minmax": true,
    "allowtoggle": false,
    "showvalue": false,
    "decimals": "1",
    "colorLine": "#ff9900",
    "colorFromTheme": false,
    "stroke": 2,
    "property": "payload",
    "pointcount": "7",
    "x": 470,
    "y": 380,
    "wires": []
  },
  {
    "id": "d6bb8d75808b864c",
    "type": "ui_valuetrail",
    "z": "dacccb3c983e693c",
    "group": "938673c4a764e916",
    "order": 4,
    "width": 0,
    "height": 0,
    "name": "헹굼수 온도 그래프",
    "label": "",
    "unit": "",
    "blur": true,
    "minmax": true,
    "allowtoggle": false,
    "showvalue": false,
    "decimals": "1",
    "colorLine": "#ff9900",
    "colorFromTheme": false,
    "stroke": 2,
    "property": "payload",
    "pointcount": "7",
    "x": 470,
    "y": 520,
    "wires": []
  },
  {
    "id": "f61895bc69ff24f8",
    "type": "ui_valuetrail",
    "z": "dacccb3c983e693c",
    "group": "80424e03a4e68f78",
    "order": 1,
    "width": 0,
    "height": 0,
    "name": "인버터 그래프",
    "label": "",
    "unit": "",
    "blur": true,
    "minmax": true,
    "allowtoggle": false,
    "showvalue": false,
    "decimals": 0,
    "colorLine": "#ff9900",
    "colorFromTheme": false,
    "stroke": 2,
    "property": "payload",
    "pointcount": "7",
    "x": 420,
    "y": 740,
    "wires": []
  },
  {
    "id": "3b0762dcc30d6de9",
    "type": "inject",
    "z": "6cfb4e61667234ed",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "10",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "str",
    "x": 90,
    "y": 120,
    "wires": [
      [
        "4104cd0af3781122"
      ]
    ]
  },
  {
    "id": "4104cd0af3781122",
    "type": "function",
    "z": "6cfb4e61667234ed",
    "name": "select an item from DB",
    "func": "msg.topic = \"SELECT * FROM fztable WHERE DATE(date) BETWEEN :sdate AND :edate order by fz_idx desc limit 100;\";\n\nvar vs = global.get('start_date');\nvar ve = global.get('end_date');\n\nvar vsdate = new Date(vs);\nvar vedate = new Date(ve);\n\nvar vsdd = vsdate.getDate();\nif(vsdd < 10) vsdd = '0' + vsdd;\nvar vsmm = vsdate.getMonth()+1;\nvar vsyy = vsdate.getFullYear();\n\nvar vedd = vedate.getDate();\nif(vedd < 10) vedd = '0' + vedd;\nvar vemm = vedate.getMonth()+1;\nvar veyy = vedate.getFullYear();\n\nvar vsday = vsyy + '-' + vsmm + '-' + vsdd;\nvar veday = veyy + '-' + vemm + '-' + vedd;\n\n\n// msg.payload = { sdate: '2021-01-15', edate: '2021-01-15' };\nmsg.payload = { sdate: vsday, edate: veday };\nreturn msg;\n\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 320,
    "y": 120,
    "wires": [
      [
        "4e97e19ce1f5b9bd"
      ]
    ]
  },
  {
    "id": "2a7c35b443dcc1a2",
    "type": "function",
    "z": "6cfb4e61667234ed",
    "name": "data parse",
    "func": "var aJsonArray = new Array();\n\nvar j = 0; \nfor(var i = 0; i < msg.payload.length; i++)\n{\n    msg.payload[i].date = msg.payload[i].date.toLocaleString(\"en-US\", {timeZone: \"Asia/Seoul\"});\n    aJsonArray.push(msg.payload[i]);\n    j += 1;\n    if(j == 100) break;\n    \n}\n\nvar text = JSON.stringify(aJsonArray);\nvar obj = JSON.parse(text);\nmsg.payload = obj;\n\nreturn msg;\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 690,
    "y": 120,
    "wires": [
      [
        "8a4d01cbe983d9b0",
        "395ce7ab0663954c"
      ]
    ]
  },
  {
    "id": "53e0b13175f0b340",
    "type": "ui_date_picker",
    "z": "6cfb4e61667234ed",
    "name": "",
    "label": "From",
    "group": "7077a3222aa2fa2f",
    "order": 2,
    "width": 4,
    "height": 1,
    "passthru": true,
    "topic": "",
    "topicType": "str",
    "className": "",
    "x": 250,
    "y": 220,
    "wires": [
      [
        "8934888ed7638a4b"
      ]
    ]
  },
  {
    "id": "2833ba73b57d7779",
    "type": "ui_date_picker",
    "z": "6cfb4e61667234ed",
    "name": "",
    "label": "To",
    "group": "7077a3222aa2fa2f",
    "order": 3,
    "width": 4,
    "height": 1,
    "passthru": true,
    "topic": "",
    "topicType": "str",
    "className": "",
    "x": 250,
    "y": 280,
    "wires": [
      [
        "70f4e436baa75f4e"
      ]
    ]
  },
  {
    "id": "8934888ed7638a4b",
    "type": "function",
    "z": "6cfb4e61667234ed",
    "name": "store start_date",
    "func": "global.set('start_date', msg.payload);\n\nmsg.payload = new Date(msg.payload);\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 410,
    "y": 220,
    "wires": [
      [
        "4104cd0af3781122"
      ]
    ]
  },
  {
    "id": "70f4e436baa75f4e",
    "type": "function",
    "z": "6cfb4e61667234ed",
    "name": "store end_date",
    "func": "global.set('end_date', msg.payload);\n\nmsg.payload = new Date(msg.payload);\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 410,
    "y": 280,
    "wires": [
      [
        "4104cd0af3781122"
      ]
    ]
  },
  {
    "id": "c43ddcd2f1324e46",
    "type": "ui_button",
    "z": "6cfb4e61667234ed",
    "name": "",
    "group": "7077a3222aa2fa2f",
    "order": 1,
    "width": 2,
    "height": 1,
    "passthru": false,
    "label": "Today",
    "tooltip": "",
    "color": "",
    "bgcolor": "",
    "className": "",
    "icon": "",
    "payload": "",
    "payloadType": "date",
    "topic": "",
    "topicType": "str",
    "x": 80,
    "y": 220,
    "wires": [
      [
        "53e0b13175f0b340",
        "2833ba73b57d7779"
      ]
    ]
  },
  {
    "id": "395ce7ab0663954c",
    "type": "debug",
    "z": "6cfb4e61667234ed",
    "name": "debug 22",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 880,
    "y": 100,
    "wires": []
  },
  {
    "id": "4e97e19ce1f5b9bd",
    "type": "mysql",
    "z": "6cfb4e61667234ed",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 520,
    "y": 120,
    "wires": [
      [
        "2a7c35b443dcc1a2"
      ]
    ]
  },
  {
    "id": "8254a388f2672ee5",
    "type": "comment",
    "z": "6cfb4e61667234ed",
    "name": "세척기 데이터 DB 데이터 모니터링",
    "info": "1. temp1 : 세척수 온도\n2. temp2 : 헹굼수 온도\n3. Hz : Hz\n4. rpm : rpm",
    "x": 160,
    "y": 60,
    "wires": []
  },
  {
    "id": "8a4d01cbe983d9b0",
    "type": "ui_table",
    "z": "6cfb4e61667234ed",
    "group": "7077a3222aa2fa2f",
    "name": "",
    "order": 5,
    "width": 14,
    "height": 6,
    "columns": [
      {
        "field": "temp1",
        "title": "PT온도계1",
        "width": "18px",
        "align": "center",
        "formatter": "plaintext",
        "formatterParams": {
          "target": "_blank"
        }
      },
      {
        "field": "HZ",
        "title": "인버터HZ",
        "width": "18px",
        "align": "center",
        "formatter": "plaintext",
        "formatterParams": {
          "target": "_blank"
        }
      },
      {
        "field": "RPM",
        "title": "인버터RPM",
        "width": "18px",
        "align": "center",
        "formatter": "plaintext",
        "formatterParams": {
          "target": "_blank"
        }
      },
      {
        "field": "date",
        "title": "DATE",
        "width": "24px",
        "align": "center",
        "formatter": "plaintext",
        "formatterParams": {
          "target": "_blank"
        }
      }
    ],
    "outputs": 1,
    "cts": true,
    "x": 870,
    "y": 140,
    "wires": [
      []
    ]
  },
  {
    "id": "630a013e2443aa2f",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "smg1 테이블 - 데이터 보관 기간 30일",
    "info": "",
    "x": 190,
    "y": 60,
    "wires": []
  },
  {
    "id": "e44afcdab98f8638",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 100,
    "wires": [
      [
        "ea74866def31c534"
      ]
    ]
  },
  {
    "id": "ea74866def31c534",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM smg1 WHERE wdate < CURDATE() - INTERVAL 30 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 100,
    "wires": [
      [
        "4293ef20048a0043"
      ]
    ]
  },
  {
    "id": "4293ef20048a0043",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 100,
    "wires": [
      [
        "b88acf57a59e54f6"
      ]
    ]
  },
  {
    "id": "b88acf57a59e54f6",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 10",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 100,
    "wires": []
  },
  {
    "id": "a4cf81fee303c42a",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 220,
    "wires": [
      [
        "b7d460b63e2fc722"
      ]
    ]
  },
  {
    "id": "a0803fdf54efce29",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 220,
    "wires": [
      [
        "82288aa925ab3955"
      ]
    ]
  },
  {
    "id": "82288aa925ab3955",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 11",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 220,
    "wires": []
  },
  {
    "id": "b880b7f732dc792c",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 340,
    "wires": [
      [
        "a8c35be86e1708d6"
      ]
    ]
  },
  {
    "id": "9a0538cd9d35a47d",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 340,
    "wires": [
      [
        "e5705399c7d5803d"
      ]
    ]
  },
  {
    "id": "e5705399c7d5803d",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 12",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 340,
    "wires": []
  },
  {
    "id": "56d4534d2c7c0aff",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "fztable 테이블 - 데이터 보관 기간 7일",
    "info": "",
    "x": 190,
    "y": 420,
    "wires": []
  },
  {
    "id": "64aecba0c266ed47",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 460,
    "wires": [
      [
        "209af89787b8973d"
      ]
    ]
  },
  {
    "id": "209af89787b8973d",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM fztable WHERE date < CURDATE() - INTERVAL 7 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 460,
    "wires": [
      [
        "adf519dbb98c5edd"
      ]
    ]
  },
  {
    "id": "adf519dbb98c5edd",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 460,
    "wires": [
      [
        "22355e580e6bead6"
      ]
    ]
  },
  {
    "id": "22355e580e6bead6",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 13",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 460,
    "wires": []
  },
  {
    "id": "3c6d7c619a95de6f",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "dtu1 테이블 - 데이터 보관 기간 7일",
    "info": "",
    "x": 180,
    "y": 580,
    "wires": []
  },
  {
    "id": "7abaceb3dc48ce73",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 620,
    "wires": [
      [
        "66d75da73fbfeb9c"
      ]
    ]
  },
  {
    "id": "66d75da73fbfeb9c",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM dtu1 WHERE date < CURDATE() - INTERVAL 7 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 620,
    "wires": [
      [
        "bf680829fc28da88"
      ]
    ]
  },
  {
    "id": "bf680829fc28da88",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 620,
    "wires": [
      [
        "23d4352e9024f86c"
      ]
    ]
  },
  {
    "id": "23d4352e9024f86c",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 448",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 620,
    "wires": []
  },
  {
    "id": "d74e0ea3db98af8f",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "dtu2 테이블 - 데이터 보관 기간 7일",
    "info": "",
    "x": 180,
    "y": 700,
    "wires": []
  },
  {
    "id": "f3e92b18d907d099",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 740,
    "wires": [
      [
        "e16174193fb7cc09"
      ]
    ]
  },
  {
    "id": "e16174193fb7cc09",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM dtu2 WHERE date < CURDATE() - INTERVAL 7 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 740,
    "wires": [
      [
        "74d924fde2f285bf"
      ]
    ]
  },
  {
    "id": "74d924fde2f285bf",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 740,
    "wires": [
      [
        "d599579f4b4d2bd7"
      ]
    ]
  },
  {
    "id": "d599579f4b4d2bd7",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 449",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 740,
    "wires": []
  },
  {
    "id": "f25081a61c3b558a",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "dtu3 테이블 - 데이터 보관 기간 7일",
    "info": "",
    "x": 180,
    "y": 820,
    "wires": []
  },
  {
    "id": "ffbae675c1df52f4",
    "type": "inject",
    "z": "50af027f8d596046",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "01 00 * * *",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 860,
    "wires": [
      [
        "5f2b3fd171f8b9d9"
      ]
    ]
  },
  {
    "id": "5f2b3fd171f8b9d9",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM dtu3 WHERE date < CURDATE() - INTERVAL 7 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 860,
    "wires": [
      [
        "6827db04f6ebcda9"
      ]
    ]
  },
  {
    "id": "6827db04f6ebcda9",
    "type": "mysql",
    "z": "50af027f8d596046",
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 860,
    "wires": [
      [
        "64e10922924d00a1"
      ]
    ]
  },
  {
    "id": "64e10922924d00a1",
    "type": "debug",
    "z": "50af027f8d596046",
    "name": "debug 450",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 860,
    "wires": []
  },
  {
    "id": "ba7f0ed5402bdc93",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "smg2 테이블 - 데이터 보관 기간 30일",
    "info": "",
    "x": 190,
    "y": 180,
    "wires": []
  },
  {
    "id": "2a1b410d55984dab",
    "type": "comment",
    "z": "50af027f8d596046",
    "name": "smg3 테이블 - 데이터 보관 기간 30일",
    "info": "",
    "x": 190,
    "y": 300,
    "wires": []
  },
  {
    "id": "b7d460b63e2fc722",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM smg2 WHERE wdate < CURDATE() - INTERVAL 30 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 220,
    "wires": [
      [
        "a0803fdf54efce29"
      ]
    ]
  },
  {
    "id": "a8c35be86e1708d6",
    "type": "function",
    "z": "50af027f8d596046",
    "name": "delete",
    "func": "msg.topic = \"DELETE FROM smg3 WHERE wdate < CURDATE() - INTERVAL 30 DAY\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 290,
    "y": 340,
    "wires": [
      [
        "9a0538cd9d35a47d"
      ]
    ]
  },
  {
    "id": "b6706fc181f2cd1e",
    "type": "comment",
    "z": "bb37ce8039ee6056",
    "name": "조도센서_1",
    "info": "",
    "x": 110,
    "y": 80,
    "wires": []
  },
  {
    "id": "24881e57dd162700",
    "type": "inject",
    "z": "bb37ce8039ee6056",
    "d": true,
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 120,
    "wires": [
      [
        "11203c159c83af57"
      ]
    ]
  },
  {
    "id": "11203c159c83af57",
    "type": "function",
    "z": "bb37ce8039ee6056",
    "name": "select query",
    "func": "msg.topic = 'SELECT * FROM dtu1 WHERE (date BETWEEN date_add(now(), interval -60 second) AND now()) ORDER BY date DESC LIMIT 1';\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 270,
    "y": 120,
    "wires": [
      [
        "f18ebf9ef41cac9f"
      ]
    ]
  },
  {
    "id": "f18ebf9ef41cac9f",
    "type": "mysql",
    "z": "bb37ce8039ee6056",
    "d": true,
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 120,
    "wires": [
      [
        "89d4ddfc25b82d72"
      ]
    ]
  },
  {
    "id": "89d4ddfc25b82d72",
    "type": "function",
    "z": "bb37ce8039ee6056",
    "name": "send api",
    "func": "let temp = msg.payload[0].value3;   // 온도\nlet humid = msg.payload[0].value4;  // 습도\nlet co2 = msg.payload[0].value2;    // 이산화탄소\nlet lux = msg.payload[0].value5;    // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"scode\": \"73\",\n    \"kind\": \"5\",\n    \"deviceId\": \"3\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 600,
    "y": 120,
    "wires": [
      [
        "ca5e73176b436fc4",
        "740ed6abb1edd07a"
      ]
    ]
  },
  {
    "id": "ca5e73176b436fc4",
    "type": "debug",
    "z": "bb37ce8039ee6056",
    "name": "debug 14",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 760,
    "y": 100,
    "wires": []
  },
  {
    "id": "740ed6abb1edd07a",
    "type": "http request",
    "z": "bb37ce8039ee6056",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 770,
    "y": 140,
    "wires": [
      [
        "fd513e9ebbccf1bb"
      ]
    ]
  },
  {
    "id": "fd513e9ebbccf1bb",
    "type": "debug",
    "z": "bb37ce8039ee6056",
    "name": "debug 15",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 920,
    "y": 140,
    "wires": []
  },
  {
    "id": "e70bc9bce3ea0516",
    "type": "comment",
    "z": "bb37ce8039ee6056",
    "name": "조도센서_2",
    "info": "",
    "x": 110,
    "y": 220,
    "wires": []
  },
  {
    "id": "0e05b0a515674df3",
    "type": "inject",
    "z": "bb37ce8039ee6056",
    "d": true,
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 260,
    "wires": [
      [
        "b22a14d9608d1e33"
      ]
    ]
  },
  {
    "id": "b22a14d9608d1e33",
    "type": "function",
    "z": "bb37ce8039ee6056",
    "name": "select query",
    "func": "msg.topic = 'SELECT * FROM dtu2 WHERE (date BETWEEN date_add(now(), interval -60 second) AND now()) ORDER BY date DESC LIMIT 1';\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 270,
    "y": 260,
    "wires": [
      [
        "984ef0be79f918b5"
      ]
    ]
  },
  {
    "id": "984ef0be79f918b5",
    "type": "mysql",
    "z": "bb37ce8039ee6056",
    "d": true,
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 260,
    "wires": [
      [
        "3b6f6c1835ea24b8"
      ]
    ]
  },
  {
    "id": "e7f367e9a5354c32",
    "type": "comment",
    "z": "bb37ce8039ee6056",
    "name": "조도센서_3",
    "info": "",
    "x": 110,
    "y": 360,
    "wires": []
  },
  {
    "id": "4bf88921a895324a",
    "type": "inject",
    "z": "bb37ce8039ee6056",
    "d": true,
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 400,
    "wires": [
      [
        "59291ba8f5521eb4"
      ]
    ]
  },
  {
    "id": "59291ba8f5521eb4",
    "type": "function",
    "z": "bb37ce8039ee6056",
    "name": "select query",
    "func": "msg.topic = 'SELECT * FROM dtu3 WHERE (date BETWEEN date_add(now(), interval -60 second) AND now()) ORDER BY date DESC LIMIT 1';\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 270,
    "y": 400,
    "wires": [
      [
        "8b05d8ec0e9b15bf"
      ]
    ]
  },
  {
    "id": "8b05d8ec0e9b15bf",
    "type": "mysql",
    "z": "bb37ce8039ee6056",
    "d": true,
    "mydb": "5904de5649bf46eb",
    "name": "",
    "x": 440,
    "y": 400,
    "wires": [
      [
        "aff98f8239e352f9"
      ]
    ]
  },
  {
    "id": "3b6f6c1835ea24b8",
    "type": "function",
    "z": "bb37ce8039ee6056",
    "name": "send api",
    "func": "let temp = msg.payload[0].value3;   // 온도\nlet humid = msg.payload[0].value4;  // 습도\nlet co2 = msg.payload[0].value2;    // 이산화탄소\nlet lux = msg.payload[0].value5;    // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"scode\": \"74\",\n    \"kind\": \"5\",\n    \"deviceId\": \"4\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 600,
    "y": 260,
    "wires": [
      [
        "24446517793d5270",
        "e88728947425342b"
      ]
    ]
  },
  {
    "id": "24446517793d5270",
    "type": "debug",
    "z": "bb37ce8039ee6056",
    "name": "debug 16",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 760,
    "y": 240,
    "wires": []
  },
  {
    "id": "e88728947425342b",
    "type": "http request",
    "z": "bb37ce8039ee6056",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 770,
    "y": 280,
    "wires": [
      [
        "b4c1dd8aaa58904c"
      ]
    ]
  },
  {
    "id": "b4c1dd8aaa58904c",
    "type": "debug",
    "z": "bb37ce8039ee6056",
    "name": "debug 17",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 920,
    "y": 280,
    "wires": []
  },
  {
    "id": "aff98f8239e352f9",
    "type": "function",
    "z": "bb37ce8039ee6056",
    "name": "send api",
    "func": "let temp = msg.payload[0].value3;   // 온도\nlet humid = msg.payload[0].value4;  // 습도\nlet co2 = msg.payload[0].value2;    // 이산화탄소\nlet lux = msg.payload[0].value5;    // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0063\",\n    \"scode\": \"75\",\n    \"kind\": \"5\",\n    \"deviceId\": \"5\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 600,
    "y": 400,
    "wires": [
      [
        "f742632cdb146134",
        "8a909e9c117d6154"
      ]
    ]
  },
  {
    "id": "f742632cdb146134",
    "type": "debug",
    "z": "bb37ce8039ee6056",
    "name": "debug 18",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 760,
    "y": 380,
    "wires": []
  },
  {
    "id": "8a909e9c117d6154",
    "type": "http request",
    "z": "bb37ce8039ee6056",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0063/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 770,
    "y": 420,
    "wires": [
      [
        "d9e142bc864fb4b9"
      ]
    ]
  },
  {
    "id": "d9e142bc864fb4b9",
    "type": "debug",
    "z": "bb37ce8039ee6056",
    "name": "debug 19",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 920,
    "y": 420,
    "wires": []
  },
  {
    "id": "f09a2dc8c1d775e7",
    "type": "inject",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "Manual Inject",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "60",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 100,
    "wires": [
      [
        "068f46ce49d8354c"
      ]
    ]
  },
  {
    "id": "068f46ce49d8354c",
    "type": "modbus-getter",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "1",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "c0cd74c4421a7670",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 160,
    "wires": [
      [
        "54de6537d1081b27"
      ],
      []
    ]
  },
  {
    "id": "61004491418ea744",
    "type": "comment",
    "z": "8e6679f805bb8a8b",
    "name": "XR10 (1~6)",
    "info": "",
    "x": 90,
    "y": 60,
    "wires": []
  },
  {
    "id": "e6bb9a93811aac9f",
    "type": "modbus-getter",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "2",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "InputRegister",
    "adr": "100",
    "quantity": "1",
    "server": "c0cd74c4421a7670",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 110,
    "y": 200,
    "wires": [
      [
        "5fe5a1cb4665d929"
      ],
      []
    ]
  },
  {
    "id": "5fe5a1cb4665d929",
    "type": "delay",
    "z": "8e6679f805bb8a8b",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 230,
    "y": 200,
    "wires": [
      [
        "954b2e2e8088fae9"
      ]
    ]
  },
  {
    "id": "54de6537d1081b27",
    "type": "delay",
    "z": "8e6679f805bb8a8b",
    "name": "0.2",
    "pauseType": "delay",
    "timeout": "0.2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 230,
    "y": 160,
    "wires": [
      [
        "e6bb9a93811aac9f",
        "954b2e2e8088fae9"
      ]
    ]
  },
  {
    "id": "45f0bca202d451c2",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug for TCs",
    "active": true,
    "tosidebar": false,
    "console": false,
    "tostatus": true,
    "complete": "true",
    "targetType": "full",
    "statusVal": "payload",
    "statusType": "msg",
    "x": 900,
    "y": 220,
    "wires": []
  },
  {
    "id": "04f6af89e43696b2",
    "type": "http request",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0064/get_temperature",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 730,
    "y": 220,
    "wires": [
      [
        "45f0bca202d451c2"
      ]
    ]
  },
  {
    "id": "f2ae6478098f1240",
    "type": "function",
    "z": "8e6679f805bb8a8b",
    "name": "send api",
    "func": "//현재 온도 (음수 표현은 buffer parser에서 수정 조치, INT 16BE 필요)\nvar curTemp = parseFloat(msg.payload) / 10;\n\n//장치 국번\nvar unitid = msg.unitId;\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\nmsg.payload = {\n    \"ccode\": \"0064\",\n    \"kind\": \"4\",\n    \"deviceId\": unitid,\n    \"temperature\": curTemp,\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 560,
    "y": 180,
    "wires": [
      [
        "04f6af89e43696b2",
        "acece7fe048d6bd3"
      ]
    ]
  },
  {
    "id": "954b2e2e8088fae9",
    "type": "buffer-parser",
    "z": "8e6679f805bb8a8b",
    "name": "",
    "data": "payload",
    "dataType": "msg",
    "specification": "spec",
    "specificationType": "ui",
    "items": [
      {
        "type": "int16be",
        "name": "item1",
        "offset": 0,
        "length": 1,
        "offsetbit": 0,
        "scale": "1",
        "mask": ""
      }
    ],
    "swap1": "",
    "swap2": "",
    "swap3": "",
    "swap1Type": "swap",
    "swap2Type": "swap",
    "swap3Type": "swap",
    "msgProperty": "payload",
    "msgPropertyType": "str",
    "resultType": "value",
    "resultTypeType": "return",
    "multipleResult": false,
    "fanOutMultipleResult": false,
    "setTopic": true,
    "outputs": 1,
    "x": 410,
    "y": 180,
    "wires": [
      [
        "f2ae6478098f1240"
      ]
    ]
  },
  {
    "id": "acece7fe048d6bd3",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug for TCs",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": true,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "payload",
    "statusType": "auto",
    "x": 740,
    "y": 160,
    "wires": []
  },
  {
    "id": "576c99a5eb70595b",
    "type": "comment",
    "z": "8e6679f805bb8a8b",
    "name": "조도센서_1",
    "info": "장치 : BCON-TRM200\n수집 데이터 : 온도, 습도, CO2, 조도\n\n*Function Code\n - Func 3, 4\n\n2) address\n0 : 센서에러 (1:센서에러, 0:에러아님)\n1 : CO2센서값 (0 ~ 5000ppm)\n2 : 온도센서값 (-20.0 ~ 65.0℃)\n3 : 습도센서값 (0 ~ 100.0%Rh)\n4 : 조도센서값 (0 ~ 54600 Lux)",
    "x": 90,
    "y": 320,
    "wires": []
  },
  {
    "id": "3f378958fa058031",
    "type": "inject",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 360,
    "wires": [
      [
        "293a1f0c724f8382"
      ]
    ]
  },
  {
    "id": "e8a76f2c413b8686",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug 4",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 560,
    "y": 320,
    "wires": []
  },
  {
    "id": "6d9e4e10c1c3e93f",
    "type": "http request",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0064/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 570,
    "y": 360,
    "wires": [
      [
        "26031491a3fc245e"
      ]
    ]
  },
  {
    "id": "563c65fee3a46b32",
    "type": "comment",
    "z": "8e6679f805bb8a8b",
    "name": "조도센서_2",
    "info": "장치 : BCON-TRM200\n수집 데이터 : 온도, 습도, CO2, 조도\n\n*Function Code\n - Func 3, 4\n\n2) address\n0 : 센서에러 (1:센서에러, 0:에러아님)\n1 : CO2센서값 (0 ~ 5000ppm)\n2 : 온도센서값 (-20.0 ~ 65.0℃)\n3 : 습도센서값 (0 ~ 100.0%Rh)\n4 : 조도센서값 (0 ~ 54600 Lux)",
    "x": 90,
    "y": 460,
    "wires": []
  },
  {
    "id": "191e2b5a7b12f3d7",
    "type": "inject",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 500,
    "wires": [
      [
        "db83ab52dd96aedf"
      ]
    ]
  },
  {
    "id": "a308961f3af33688",
    "type": "comment",
    "z": "8e6679f805bb8a8b",
    "name": "조도센서_3",
    "info": "장치 : BCON-TRM200\n수집 데이터 : 온도, 습도, CO2, 조도\n\n*Function Code\n - Func 3, 4\n\n2) address\n0 : 센서에러 (1:센서에러, 0:에러아님)\n1 : CO2센서값 (0 ~ 5000ppm)\n2 : 온도센서값 (-20.0 ~ 65.0℃)\n3 : 습도센서값 (0 ~ 100.0%Rh)\n4 : 조도센서값 (0 ~ 54600 Lux)",
    "x": 90,
    "y": 600,
    "wires": []
  },
  {
    "id": "126232638b9eb371",
    "type": "inject",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "9분",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "540",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 640,
    "wires": [
      [
        "0532e290fcac1148"
      ]
    ]
  },
  {
    "id": "e7e0897e8cc4e8b4",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug 6",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 560,
    "y": 460,
    "wires": []
  },
  {
    "id": "ae36b3e04fc4c525",
    "type": "http request",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0064/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 570,
    "y": 500,
    "wires": [
      [
        "c0659639ca2a887f"
      ]
    ]
  },
  {
    "id": "b808723f488b90a0",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug 8",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 560,
    "y": 600,
    "wires": []
  },
  {
    "id": "cd7f308a3d4008e6",
    "type": "http request",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://pc.smarthaccpman.com/smh-api/c0064/get_visual",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 570,
    "y": 640,
    "wires": [
      [
        "1eb8d5e2b105af71"
      ]
    ]
  },
  {
    "id": "26031491a3fc245e",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug 5",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 720,
    "y": 360,
    "wires": []
  },
  {
    "id": "c0659639ca2a887f",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug 7",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 720,
    "y": 500,
    "wires": []
  },
  {
    "id": "1eb8d5e2b105af71",
    "type": "debug",
    "z": "8e6679f805bb8a8b",
    "name": "debug 9",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 720,
    "y": 640,
    "wires": []
  },
  {
    "id": "293a1f0c724f8382",
    "type": "modbus-getter",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "smg5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "1",
    "dataType": "HoldingRegister",
    "adr": "0",
    "quantity": "5",
    "server": "665e361b0921d3b4",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 240,
    "y": 360,
    "wires": [
      [
        "e0d9c4adbc6bb382"
      ],
      []
    ]
  },
  {
    "id": "db83ab52dd96aedf",
    "type": "modbus-getter",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "smg5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "2",
    "dataType": "HoldingRegister",
    "adr": "0",
    "quantity": "5",
    "server": "2d8ed90b67134bc5",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 240,
    "y": 500,
    "wires": [
      [
        "c2487dc15a52dba9"
      ],
      []
    ]
  },
  {
    "id": "0532e290fcac1148",
    "type": "modbus-getter",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "name": "smg5400",
    "showStatusActivities": true,
    "showErrors": true,
    "showWarnings": true,
    "logIOActivities": false,
    "unitid": "3",
    "dataType": "HoldingRegister",
    "adr": "0",
    "quantity": "5",
    "server": "9221faa7114a63e5",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 240,
    "y": 640,
    "wires": [
      [
        "b36387ae7a564803"
      ],
      []
    ]
  },
  {
    "id": "e0d9c4adbc6bb382",
    "type": "function",
    "z": "8e6679f805bb8a8b",
    "name": "send api",
    "func": "let sensor_error = msg.payload[0];   // [1:센서에러, 0:에러아님]\nlet co2 = msg.payload[1];            // 이산화탄소\nlet temp = msg.payload[2];           // 온도\nlet humid = msg.payload[3];          // 습도\nlet lux = msg.payload[4];            // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0064\",\n    \"scode\": \"73\",\n    \"kind\": \"5\",\n    \"deviceId\": \"3\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\nmsg.topic = \"INSERT INTO fz_shm.smg1 (co2, temp, humid, lux) VALUES (\" + co2 + \", \" + temp + \", \" + humid + \", \" + lux + \")\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 360,
    "wires": [
      [
        "e8a76f2c413b8686",
        "6d9e4e10c1c3e93f",
        "c8e6ea329a43699f"
      ]
    ]
  },
  {
    "id": "c2487dc15a52dba9",
    "type": "function",
    "z": "8e6679f805bb8a8b",
    "name": "send api",
    "func": "let sensor_error = msg.payload[0];   // [1:센서에러, 0:에러아님]\nlet co2 = msg.payload[1];            // 이산화탄소\nlet temp = msg.payload[2];           // 온도\nlet humid = msg.payload[3];          // 습도\nlet lux = msg.payload[4];            // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0064\",\n    \"scode\": \"74\",\n    \"kind\": \"5\",\n    \"deviceId\": \"4\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\nmsg.topic = \"INSERT INTO fz_shm.smg2 (co2, temp, humid, lux) VALUES (\" + co2 + \", \" + temp + \", \" + humid + \", \" + lux + \")\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 500,
    "wires": [
      [
        "e7e0897e8cc4e8b4",
        "ae36b3e04fc4c525",
        "cf1f532d6c0c5b03"
      ]
    ]
  },
  {
    "id": "b36387ae7a564803",
    "type": "function",
    "z": "8e6679f805bb8a8b",
    "name": "send api",
    "func": "let sensor_error = msg.payload[0];   // [1:센서에러, 0:에러아님]\nlet co2 = msg.payload[1];            // 이산화탄소\nlet temp = msg.payload[2];           // 온도\nlet humid = msg.payload[3];          // 습도\nlet lux = msg.payload[4];            // 조도\n\n\nmsg.headers = {};\nmsg.headers['content-type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n\n\nmsg.payload = {\n    \"ccode\": \"0064\",\n    \"scode\": \"75\",\n    \"kind\": \"5\",\n    \"deviceId\": \"5\",\n    \"co2\": co2,\n    \"temperature\": temp,\n    \"humidity\": humid,\n    \"lux\": lux\n};\n\nmsg.topic = \"INSERT INTO fz_shm.smg3 (co2, temp, humid, lux) VALUES (\" + co2 + \", \" + temp + \", \" + humid + \", \" + lux + \")\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 400,
    "y": 640,
    "wires": [
      [
        "b808723f488b90a0",
        "cd7f308a3d4008e6",
        "224805c60d8f6ea8"
      ]
    ]
  },
  {
    "id": "224805c60d8f6ea8",
    "type": "mysql",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "mydb": "f144f55f16c3fd9f",
    "name": "",
    "x": 560,
    "y": 680,
    "wires": [
      []
    ]
  },
  {
    "id": "c8e6ea329a43699f",
    "type": "mysql",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "mydb": "f144f55f16c3fd9f",
    "name": "",
    "x": 560,
    "y": 400,
    "wires": [
      []
    ]
  },
  {
    "id": "cf1f532d6c0c5b03",
    "type": "mysql",
    "z": "8e6679f805bb8a8b",
    "d": true,
    "mydb": "f144f55f16c3fd9f",
    "name": "",
    "x": 560,
    "y": 540,
    "wires": [
      []
    ]
  }
]